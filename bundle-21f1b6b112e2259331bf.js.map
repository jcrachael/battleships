{"version":3,"file":"bundle-21f1b6b112e2259331bf.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AAC0G;AACjB;AACzF,8BAA8B,mFAA2B,CAAC,4FAAqC;AAC/F,oHAAoH,IAAI,IAAI,IAAI,IAAI,IAAI,kCAAkC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,oBAAoB;AAC1P;AACA,kEAAkE,mBAAmB,WAAW,4DAA4D,KAAK,cAAc,+BAA+B,KAAK,wCAAwC,sBAAsB,KAAK,uCAAuC,0BAA0B,2BAA2B,sBAAsB,uCAAuC,4BAA4B,8BAA8B,kBAAkB,gCAAgC,mBAAmB,qBAAqB,0BAA0B,kCAAkC,+BAA+B,kCAAkC,qBAAqB,mCAAmC,qBAAqB,iCAAiC,KAAK,sBAAsB,0BAA0B,qBAAqB,qBAAqB,gCAAgC,wBAAwB,yBAAyB,yBAAyB,KAAK,4BAA4B,qBAAqB,KAAK,iBAAiB,mBAAmB,KAAK,gCAAgC,sBAAsB,gCAAgC,wBAAwB,uBAAuB,KAAK,4CAA4C,mBAAmB,KAAK,cAAc,sBAAsB,KAAK,gBAAgB,kCAAkC,KAAK,8CAA8C,0BAA0B,sCAAsC,KAAK,kDAAkD,wBAAwB,0BAA0B,KAAK,iEAAiE,oBAAoB,2BAA2B,aAAa,uBAAuB,0BAA0B,sBAAsB,gCAAgC,4BAA4B,KAAK,2BAA2B,wBAAwB,wBAAwB,4BAA4B,KAAK,eAAe,wBAAwB,KAAK,iCAAiC,+BAA+B,qBAAqB,KAAK,8BAA8B,oCAAoC,aAAa,+BAA+B,wBAAwB,KAAK,0BAA0B,sBAAsB,yCAAyC,sCAAsC,oBAAoB,SAAS,8BAA8B,kBAAkB,mBAAmB,YAAY,kCAAkC,oBAAoB,yBAAyB,kBAAkB,gCAAgC,0BAA0B,kCAAkC,oBAAoB,oBAAoB,0BAA0B,0BAA0B,4BAA4B,kCAAkC,qBAAqB,wBAAwB,8BAA8B,sCAAsC,KAAK,qEAAqE,kCAAkC,KAAK,wBAAwB,yBAAyB,KAAK,gBAAgB,mBAAmB,mBAAmB,0BAA0B,qBAAqB,kCAAkC,mCAAmC,+BAA+B,aAAa,sBAAsB,kCAAkC,wBAAwB,KAAK,4BAA4B,kCAAkC,yBAAyB,KAAK,+BAA+B,wBAAwB,KAAK,qCAAqC,kCAAkC,KAAK,mBAAmB,2BAA2B,qBAAqB,KAAK,uBAAuB,0BAA0B,0BAA0B,qBAAqB,6CAA6C,aAAa,oBAAoB,iCAAiC,KAAK,kCAAkC,qBAAqB,4BAA4B,KAAK,mBAAmB,6BAA6B,KAAK,wBAAwB,sCAAsC,oBAAoB,kCAAkC,+BAA+B,4BAA4B,0BAA0B,0BAA0B,4BAA4B,kCAAkC,qBAAqB,wBAAwB,8BAA8B,sCAAsC,KAAK,qDAAqD,kCAAkC,KAAK,2CAA2C,0BAA0B,0BAA0B,KAAK,0BAA0B,sBAAsB,qBAAqB,gCAAgC,sBAAsB,gDAAgD,6CAA6C,qBAAqB,SAAS,uBAAuB,wBAAwB,KAAK,sCAAsC,gCAAgC,+BAA+B,qBAAqB,oBAAoB,sBAAsB,4BAA4B,0BAA0B,kCAAkC,KAAK,6EAA6E,kCAAkC,wBAAwB,KAAK,4BAA4B,kCAAkC,KAAK,uBAAuB,kCAAkC,KAAK,sBAAsB,6CAA6C,KAAK,uBAAuB,6CAA6C,KAAK,wBAAwB,wBAAwB,KAAK,wCAAwC,wBAAwB,uBAAuB,wBAAwB,oBAAoB,SAAS,OAAO,sFAAsF,KAAK,oBAAoB,aAAa,OAAO,MAAM,YAAY,QAAQ,WAAW,KAAK,UAAU,QAAQ,WAAW,KAAK,YAAY,aAAa,WAAW,YAAY,aAAa,aAAa,WAAW,YAAY,WAAW,UAAU,YAAY,aAAa,aAAa,aAAa,WAAW,YAAY,WAAW,YAAY,OAAO,KAAK,YAAY,WAAW,WAAW,YAAY,WAAW,YAAY,aAAa,OAAO,KAAK,UAAU,OAAO,KAAK,UAAU,MAAM,WAAW,KAAK,UAAU,YAAY,WAAW,UAAU,OAAO,WAAW,KAAK,UAAU,MAAM,KAAK,UAAU,OAAO,KAAK,YAAY,OAAO,KAAK,YAAY,aAAa,OAAO,KAAK,UAAU,YAAY,OAAO,KAAK,UAAU,aAAa,OAAO,KAAK,YAAY,WAAW,YAAY,aAAa,OAAO,KAAK,UAAU,UAAU,YAAY,OAAO,KAAK,UAAU,OAAO,MAAM,YAAY,WAAW,OAAO,KAAK,aAAa,OAAO,KAAK,UAAU,OAAO,KAAK,UAAU,YAAY,aAAa,YAAY,MAAM,KAAK,UAAU,WAAW,MAAM,KAAK,UAAU,cAAc,OAAO,KAAK,YAAY,aAAa,WAAW,UAAU,YAAY,aAAa,aAAa,aAAa,WAAW,UAAU,YAAY,aAAa,OAAO,KAAK,YAAY,OAAO,KAAK,YAAY,OAAO,KAAK,UAAU,UAAU,YAAY,WAAW,YAAY,aAAa,cAAc,OAAO,KAAK,YAAY,WAAW,OAAO,KAAK,YAAY,aAAa,OAAO,KAAK,UAAU,OAAO,KAAK,YAAY,OAAO,KAAK,YAAY,WAAW,OAAO,KAAK,YAAY,aAAa,WAAW,aAAa,OAAO,KAAK,YAAY,OAAO,WAAW,KAAK,UAAU,YAAY,OAAO,KAAK,YAAY,OAAO,MAAM,YAAY,WAAW,YAAY,aAAa,aAAa,aAAa,aAAa,aAAa,aAAa,WAAW,UAAU,YAAY,aAAa,OAAO,KAAK,YAAY,OAAO,WAAW,KAAK,YAAY,aAAa,OAAO,KAAK,UAAU,UAAU,YAAY,WAAW,YAAY,aAAa,YAAY,OAAO,KAAK,UAAU,QAAQ,WAAW,KAAK,YAAY,aAAa,WAAW,UAAU,UAAU,YAAY,aAAa,aAAa,OAAO,KAAK,YAAY,WAAW,OAAO,KAAK,YAAY,SAAS,KAAK,YAAY,SAAS,KAAK,YAAY,SAAS,KAAK,YAAY,OAAO,KAAK,UAAU,QAAQ,WAAW,KAAK,WAAW,UAAU,UAAU,WAAW,oGAAoG,IAAI,IAAI,IAAI,IAAI,IAAI,kCAAkC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,qBAAqB,gCAAgC,mBAAmB,WAAW,4DAA4D,KAAK,cAAc,+BAA+B,KAAK,wCAAwC,sBAAsB,KAAK,uCAAuC,0BAA0B,2BAA2B,sBAAsB,uCAAuC,4BAA4B,8BAA8B,kBAAkB,gCAAgC,mBAAmB,qBAAqB,0BAA0B,kCAAkC,+BAA+B,kCAAkC,qBAAqB,mCAAmC,qBAAqB,iCAAiC,KAAK,sBAAsB,0BAA0B,qBAAqB,qBAAqB,gCAAgC,wBAAwB,yBAAyB,yBAAyB,KAAK,4BAA4B,qBAAqB,KAAK,iBAAiB,mBAAmB,KAAK,gCAAgC,sBAAsB,gCAAgC,wBAAwB,uBAAuB,KAAK,4CAA4C,mBAAmB,KAAK,cAAc,sBAAsB,KAAK,gBAAgB,kCAAkC,KAAK,8CAA8C,0BAA0B,sCAAsC,KAAK,kDAAkD,wBAAwB,0BAA0B,KAAK,iEAAiE,oBAAoB,2BAA2B,aAAa,uBAAuB,0BAA0B,sBAAsB,gCAAgC,4BAA4B,KAAK,2BAA2B,wBAAwB,wBAAwB,4BAA4B,KAAK,eAAe,wBAAwB,KAAK,iCAAiC,+BAA+B,qBAAqB,KAAK,8BAA8B,oCAAoC,aAAa,+BAA+B,wBAAwB,KAAK,0BAA0B,sBAAsB,yCAAyC,sCAAsC,oBAAoB,SAAS,8BAA8B,kBAAkB,mBAAmB,YAAY,kCAAkC,oBAAoB,yBAAyB,kBAAkB,gCAAgC,0BAA0B,kCAAkC,oBAAoB,oBAAoB,0BAA0B,0BAA0B,4BAA4B,kCAAkC,qBAAqB,wBAAwB,8BAA8B,sCAAsC,KAAK,qEAAqE,kCAAkC,KAAK,wBAAwB,yBAAyB,KAAK,gBAAgB,mBAAmB,mBAAmB,0BAA0B,qBAAqB,kCAAkC,mCAAmC,+BAA+B,aAAa,sBAAsB,kCAAkC,wBAAwB,KAAK,4BAA4B,kCAAkC,yBAAyB,KAAK,+BAA+B,wBAAwB,KAAK,qCAAqC,kCAAkC,KAAK,mBAAmB,2BAA2B,qBAAqB,KAAK,uBAAuB,0BAA0B,0BAA0B,qBAAqB,6CAA6C,aAAa,oBAAoB,iCAAiC,KAAK,kCAAkC,qBAAqB,4BAA4B,KAAK,mBAAmB,6BAA6B,KAAK,wBAAwB,sCAAsC,oBAAoB,kCAAkC,+BAA+B,4BAA4B,0BAA0B,0BAA0B,4BAA4B,kCAAkC,qBAAqB,wBAAwB,8BAA8B,sCAAsC,KAAK,qDAAqD,kCAAkC,KAAK,2CAA2C,0BAA0B,0BAA0B,KAAK,0BAA0B,sBAAsB,qBAAqB,gCAAgC,sBAAsB,gDAAgD,6CAA6C,qBAAqB,SAAS,uBAAuB,wBAAwB,KAAK,sCAAsC,gCAAgC,+BAA+B,qBAAqB,oBAAoB,sBAAsB,4BAA4B,0BAA0B,kCAAkC,KAAK,6EAA6E,kCAAkC,wBAAwB,KAAK,4BAA4B,kCAAkC,KAAK,uBAAuB,kCAAkC,KAAK,sBAAsB,6CAA6C,KAAK,uBAAuB,6CAA6C,KAAK,wBAAwB,wBAAwB,KAAK,wCAAwC,wBAAwB,uBAAuB,wBAAwB,oBAAoB,SAAS,mBAAmB;AACxic;AACA,iEAAe,uBAAuB,EAAC;;;;;;;;;;;ACR1B;;AAEb;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;;AAEA;AACA,qDAAqD;AACrD;;AAEA;AACA,gDAAgD;AAChD;;AAEA;AACA,qFAAqF;AACrF;;AAEA;;AAEA;AACA,qBAAqB;AACrB;;AAEA;AACA,qBAAqB;AACrB;;AAEA;AACA,qBAAqB;AACrB;;AAEA;AACA,KAAK;AACL,KAAK;;;AAGL;AACA;AACA;AACA;;AAEA;;AAEA;AACA,sBAAsB,iBAAiB;AACvC;;AAEA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,qBAAqB;AAC1C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV,sFAAsF,qBAAqB;AAC3G;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV,iDAAiD,qBAAqB;AACtE;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV,sDAAsD,qBAAqB;AAC3E;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;ACrGa;;AAEb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uDAAuD,cAAc;AACrE;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA,MAA+F;AAC/F,MAAqF;AACrF,MAA4F;AAC5F,MAA+G;AAC/G,MAAwG;AACxG,MAAwG;AACxG,MAAmG;AACnG;AACA;;AAEA;;AAEA,4BAA4B,qGAAmB;AAC/C,wBAAwB,kHAAa;;AAErC,uBAAuB,uGAAa;AACpC;AACA,iBAAiB,+FAAM;AACvB,6BAA6B,sGAAkB;;AAE/C,aAAa,0GAAG,CAAC,sFAAO;;;;AAI6C;AACrE,OAAO,iEAAe,sFAAO,IAAI,6FAAc,GAAG,6FAAc,YAAY,EAAC;;;;;;;;;;;AC1BhE;;AAEb;;AAEA;AACA;;AAEA,kBAAkB,wBAAwB;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,4BAA4B;AAChD;AACA;AACA;AACA;;AAEA;;AAEA,qBAAqB,6BAA6B;AAClD;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;ACvGa;;AAEb;AACA;;AAEA;AACA;AACA,sDAAsD;;AAEtD;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;ACtCa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACVa;;AAEb;AACA;AACA,cAAc,KAAwC,GAAG,sBAAiB,GAAG,CAAI;;AAEjF;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACXa;;AAEb;AACA;AACA;;AAEA;AACA,kDAAkD;AAClD;;AAEA;AACA,0CAA0C;AAC1C;;AAEA;;AAEA;AACA,iFAAiF;AACjF;;AAEA;;AAEA;AACA,aAAa;AACb;;AAEA;AACA,aAAa;AACb;;AAEA;AACA,aAAa;AACb;;AAEA;;AAEA;AACA,yDAAyD;AACzD,IAAI;;AAEJ;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACrEa;;AAEb;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;ACf8B;AACQ;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,+BAA+B;AAClE,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wBAAwB;AAChD,4BAA4B,2BAA2B;AACvD;AACA;AACA;AACA,kBAAkB;AAClB,+CAA+C,IAAI,GAAG,kBAAkB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,iBAAiB,QAAQ,EAAE,GAAG,EAAE;AACnmBAAmB,uCAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,uBAAuB,+CAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACvZ4C;AACR;AACA;AACpC,oBAAoB,6CAAO;AAC3B;AACA;AACA,0BAA0B,2CAAM;AAChC;AACA;AACA,sBAAsB,kDAAS,CAAC,6CAAQ;AACxC,yBAAyB,kDAAS;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,MAAM;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,0DAAqB;AAC1C,yBAAyB,wDAAmB;AAC5C,mBAAmB,wDAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,sBAAsB,QAAQ,QAAQ;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,6CAAQ;AACzC;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,6CAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACnMyB;AACzB;AACe;AACf;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,6CAAI;AAC/B,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,iBAAiB;AACjD;AACA;AACA;AACA;AACA,cAAc;AACd,gCAAgC,iBAAiB;AACjD;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,GAAG;AACrE;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,oBAAoB;AACpB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AChJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC5EA;AACA;AACA;AACe;AACf;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS;AACT;AACA;AACA;;;;;;;;;;;;;;;;;AChCoC;AACQ;AACI;AAChD;AACA;AACA;AACA;AACA,kCAAkC,6CAAO;AACzC,wBAAwB,qDAAW;AACnC,2BAA2B,yDAAa;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACvcAAc;AACd;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,4BAA4B,eAAe;AAC3C;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,4BAA4B,eAAe;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC54CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACtDA;AACgC;AACM;AACtC;AACA,eAAe,+CAAQ;AACvB","sources":["webpack://battleships/./src/style.css","webpack://battleships/./node_modules/css-loader/dist/runtime/api.js","webpack://battleships/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://battleships/./src/style.css?7163","webpack://battleships/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://battleships/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://battleships/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://battleships/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://battleships/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://battleships/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://battleships/./src/Display.js","webpack://battleships/./src/Game.js","webpack://battleships/./src/Gameboard.js","webpack://battleships/./src/Player.js","webpack://battleships/./src/Ship.js","webpack://battleships/./src/gameLoop.js","webpack://battleships/./src/getCoordsForm.js","webpack://battleships/./src/getNameForm.js","webpack://battleships/./src/index.js"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n___CSS_LOADER_EXPORT___.push([module.id, \"@import url(https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@100;200;300;400;500;600;700&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap);\"]);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/* GLOBALS */\\r\\n\\r\\n* {\\r\\n    margin: 0; padding: 0;\\r\\n    font-family: 'Roboto', Helvetica, Arial, sans-serif;\\r\\n}\\r\\n\\r\\nbody {\\r\\n\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n\\r\\n/* HEADER */\\r\\n\\r\\nheader {\\r\\n    padding: 2rem;\\r\\n}\\r\\n\\r\\n\\r\\n/* ALERT */\\r\\n\\r\\n.alert {\\r\\n    font-size: 0.9rem;\\r\\n    position: absolute;\\r\\n    display: flex;\\r\\n    justify-content: space-between;\\r\\n    align-items: center;\\r\\n    border-radius: 0.5rem;\\r\\n    top: 60px;\\r\\n    left: calc(50% - 270px);\\r\\n    z-index: 1;\\r\\n    width: 600px;\\r\\n    padding: 5px 20px;\\r\\n    border: 1px #a1261e solid;\\r\\n    box-sizing: border-box;\\r\\n    background-color: #f56a60;\\r\\n    color: white;\\r\\n    margin: 15px auto 0px auto;\\r\\n    opacity: 0.9;\\r\\n    transition: opacity 0.6s;\\r\\n}\\r\\n\\r\\n.close-alert {\\r\\n    margin-left: 15px;\\r\\n    color: white;\\r\\n    float: right;\\r\\n\\r\\n    line-height: 1.7rem;\\r\\n    cursor: pointer;\\r\\n    transition: 0.3s;\\r\\n    font-weight: 300;\\r\\n}\\r\\n\\r\\n.close-alert:hover {\\r\\n    color: black;\\r\\n}\\r\\n\\r\\n.hidden {\\r\\n    opacity: 0;\\r\\n}\\r\\n\\r\\n/* MAIN */\\r\\n\\r\\nmain {\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    flex-wrap: wrap;\\r\\n    margin: 0 auto;\\r\\n}\\r\\n\\r\\n/* FORMS */\\r\\n\\r\\n.form-container {\\r\\n    width: 80%;\\r\\n}\\r\\n\\r\\nform {\\r\\n    padding: 20px;\\r\\n}\\r\\n\\r\\nlegend {\\r\\n    padding: 0px 0px 40px 0px;\\r\\n}\\r\\n\\r\\n#get-coords-form > .form-control > * {\\r\\n    font-size: 0.9rem;\\r\\n    justify-content: space-evenly;\\r\\n}\\r\\n\\r\\n#get-coords-form > .form-control > label {\\r\\n    font-size: 1rem;\\r\\n    font-weight: bold;\\r\\n}\\r\\n\\r\\n#get-coords-form > .form-control > input[type=\\\"text\\\"] {\\r\\n    width: 40px;\\r\\n    text-align: center;\\r\\n    \\r\\n}\\r\\n\\r\\n.form-control {\\r\\n    padding: 10px 0px;\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n}\\r\\n\\r\\n.form-control > * {\\r\\n    padding: 0.7rem;\\r\\n    font-size: 1rem;\\r\\n    border-radius: 2rem;\\r\\n}\\r\\n\\r\\nlabel {\\r\\n    text-align: end;\\r\\n}\\r\\n\\r\\nlabel[for=\\\"username\\\"] {\\r\\n\\r\\n    text-align: center;\\r\\n    width: 100px;\\r\\n}\\r\\n\\r\\ninput[type=\\\"text\\\"] {\\r\\n    border: 1px lightgray solid;\\r\\n    \\r\\n}\\r\\n\\r\\ninput[type=\\\"radio\\\"] {\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.radio-container {\\r\\n    display: grid;\\r\\n    grid-template-columns: 1rem auto;\\r\\n    grid-template-rows: auto auto;\\r\\n    gap: 0.5rem;\\r\\n\\r\\n}\\r\\n\\r\\n.radio-container > * {\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n   \\r\\n}\\r\\n\\r\\n.radio-container > label {\\r\\n    width: 80px;\\r\\n    text-align: left;\\r\\n \\r\\n    \\r\\n}\\r\\n\\r\\ninput[type=\\\"submit\\\"] {\\r\\n    margin-left: 20px;\\r\\n    background-color: #7CB342;\\r\\n    width: 90px;\\r\\n    color: #fff;\\r\\n    font-size: 0.9rem;\\r\\n    font-weight: bold;\\r\\n    letter-spacing: 1px;\\r\\n    text-transform: uppercase;\\r\\n    border: none;\\r\\n    cursor: pointer;\\r\\n    transition: 0.2s ease;\\r\\n    -webkit-transition: 0.2s ease;\\r\\n}\\r\\n\\r\\ninput[type=\\\"submit\\\"]:hover, input[type=\\\"submit\\\"]:active {\\r\\n    background-color: #558B2F;\\r\\n}\\r\\n\\r\\n#submit-coords {\\r\\n    margin-top: 20px;\\r\\n}\\r\\n\\r\\n.error {\\r\\n    z-index: 1;\\r\\n    padding: 0;\\r\\n    font-size: 0.7rem;\\r\\n    color: white;\\r\\n    background-color: #f33f63;\\r\\n    border-radius: 0 0 5px 5px;\\r\\n    box-sizing: border-box;\\r\\n    \\r\\n}\\r\\n\\r\\n.error.green {\\r\\n    background-color: #7CB342;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.error.green:hover {\\r\\n    background-color: #558B2F;\\r\\n    transition: 0.2s;\\r\\n}\\r\\n\\r\\n.error.green.inactive {\\r\\n    cursor: default;\\r\\n}\\r\\n\\r\\n.error.green.inactive:hover {\\r\\n    background-color: #7CB342;\\r\\n}\\r\\n\\r\\n.disabled {\\r\\n    font-style: italic;\\r\\n    opacity: 0.7;\\r\\n}\\r\\n\\r\\n.error.active {\\r\\n    font-size: 0.7rem;\\r\\n    margin-top: -20px;\\r\\n    width: 250px;\\r\\n    padding: 0.3rem 0.5rem 0.2rem 0.5rem;\\r\\n    \\r\\n}\\r\\n\\r\\n.invisible {\\r\\n    display: none !important;\\r\\n}\\r\\n\\r\\n/* ASIDE */\\r\\n\\r\\naside {\\r\\n    height: 6rem;\\r\\n    margin-bottom: 2rem;\\r\\n}\\r\\n\\r\\naside > p {\\r\\n    padding: 0.5rem 0rem;\\r\\n}\\r\\n\\r\\naside > button {\\r\\n\\r\\n    background-color: #7CB342;\\r\\n    color: #fff;\\r\\n    margin: 10px 0px 20px 0px;\\r\\n    padding: 0.5rem 0.8rem;\\r\\n    border-radius: 20px;\\r\\n    font-size: 0.9rem;\\r\\n    font-weight: bold;\\r\\n    letter-spacing: 1px;\\r\\n    text-transform: uppercase;\\r\\n    border: none;\\r\\n    cursor: pointer;\\r\\n    transition: 0.2s ease;\\r\\n    -webkit-transition: 0.2s ease;\\r\\n}\\r\\n\\r\\naside > button:hover, aside > button:active {\\r\\n    background-color: #558B2F;\\r\\n}\\r\\n\\r\\n/* BOARDS */\\r\\n\\r\\n.board-header {\\r\\n    font-weight: bold;\\r\\n    font-size: 1.2rem;\\r\\n}\\r\\n\\r\\n.board-container {\\r\\n    height: 500px;\\r\\n    width: 500px;\\r\\n    border: 1px black solid;\\r\\n    display: grid;\\r\\n    grid-template-columns: repeat(10, auto);\\r\\n    grid-template-rows: repeat(10, auto);\\r\\n    margin: 25px;\\r\\n\\r\\n}\\r\\n\\r\\n#board-Jasper {\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n\\r\\n/* CELLS */\\r\\n\\r\\n.cell {\\r\\n    border: 1px black solid;\\r\\n    box-sizing: border-box;\\r\\n    height: 50px;\\r\\n    width: 50px;\\r\\n    display: grid;\\r\\n    align-items: center;\\r\\n    font-size: 0.9rem;\\r\\n    background-color: #0D47A1;\\r\\n}\\r\\n\\r\\n#board-jasper .cell.open:hover, #board-jasper .cell.ship.open:hover {\\r\\n    background-color: #82B1FF;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n#board-human .ship {\\r\\n    background-color: #ffda33;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.miss {\\r\\n    background-color: #80c045;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.hit {\\r\\n    background-color: #F44336 !important;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.sink {\\r\\n    background-color: #F44336 !important;\\r\\n}\\r\\n\\r\\n.inactive-cell {\\r\\n    cursor: default;\\r\\n}\\r\\n\\r\\n\\r\\n/* FOOTER */\\r\\n\\r\\nfooter {\\r\\n    position: fixed;\\r\\n \\r\\n    bottom: 0;\\r\\n    font-size: 10pt;\\r\\n    width: 100%;\\r\\n\\r\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/style.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"@import url('https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@100;200;300;400;500;600;700&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap');\\r\\n\\r\\n/* GLOBALS */\\r\\n\\r\\n* {\\r\\n    margin: 0; padding: 0;\\r\\n    font-family: 'Roboto', Helvetica, Arial, sans-serif;\\r\\n}\\r\\n\\r\\nbody {\\r\\n\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n\\r\\n/* HEADER */\\r\\n\\r\\nheader {\\r\\n    padding: 2rem;\\r\\n}\\r\\n\\r\\n\\r\\n/* ALERT */\\r\\n\\r\\n.alert {\\r\\n    font-size: 0.9rem;\\r\\n    position: absolute;\\r\\n    display: flex;\\r\\n    justify-content: space-between;\\r\\n    align-items: center;\\r\\n    border-radius: 0.5rem;\\r\\n    top: 60px;\\r\\n    left: calc(50% - 270px);\\r\\n    z-index: 1;\\r\\n    width: 600px;\\r\\n    padding: 5px 20px;\\r\\n    border: 1px #a1261e solid;\\r\\n    box-sizing: border-box;\\r\\n    background-color: #f56a60;\\r\\n    color: white;\\r\\n    margin: 15px auto 0px auto;\\r\\n    opacity: 0.9;\\r\\n    transition: opacity 0.6s;\\r\\n}\\r\\n\\r\\n.close-alert {\\r\\n    margin-left: 15px;\\r\\n    color: white;\\r\\n    float: right;\\r\\n\\r\\n    line-height: 1.7rem;\\r\\n    cursor: pointer;\\r\\n    transition: 0.3s;\\r\\n    font-weight: 300;\\r\\n}\\r\\n\\r\\n.close-alert:hover {\\r\\n    color: black;\\r\\n}\\r\\n\\r\\n.hidden {\\r\\n    opacity: 0;\\r\\n}\\r\\n\\r\\n/* MAIN */\\r\\n\\r\\nmain {\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    flex-wrap: wrap;\\r\\n    margin: 0 auto;\\r\\n}\\r\\n\\r\\n/* FORMS */\\r\\n\\r\\n.form-container {\\r\\n    width: 80%;\\r\\n}\\r\\n\\r\\nform {\\r\\n    padding: 20px;\\r\\n}\\r\\n\\r\\nlegend {\\r\\n    padding: 0px 0px 40px 0px;\\r\\n}\\r\\n\\r\\n#get-coords-form > .form-control > * {\\r\\n    font-size: 0.9rem;\\r\\n    justify-content: space-evenly;\\r\\n}\\r\\n\\r\\n#get-coords-form > .form-control > label {\\r\\n    font-size: 1rem;\\r\\n    font-weight: bold;\\r\\n}\\r\\n\\r\\n#get-coords-form > .form-control > input[type=\\\"text\\\"] {\\r\\n    width: 40px;\\r\\n    text-align: center;\\r\\n    \\r\\n}\\r\\n\\r\\n.form-control {\\r\\n    padding: 10px 0px;\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n}\\r\\n\\r\\n.form-control > * {\\r\\n    padding: 0.7rem;\\r\\n    font-size: 1rem;\\r\\n    border-radius: 2rem;\\r\\n}\\r\\n\\r\\nlabel {\\r\\n    text-align: end;\\r\\n}\\r\\n\\r\\nlabel[for=\\\"username\\\"] {\\r\\n\\r\\n    text-align: center;\\r\\n    width: 100px;\\r\\n}\\r\\n\\r\\ninput[type=\\\"text\\\"] {\\r\\n    border: 1px lightgray solid;\\r\\n    \\r\\n}\\r\\n\\r\\ninput[type=\\\"radio\\\"] {\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.radio-container {\\r\\n    display: grid;\\r\\n    grid-template-columns: 1rem auto;\\r\\n    grid-template-rows: auto auto;\\r\\n    gap: 0.5rem;\\r\\n\\r\\n}\\r\\n\\r\\n.radio-container > * {\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n   \\r\\n}\\r\\n\\r\\n.radio-container > label {\\r\\n    width: 80px;\\r\\n    text-align: left;\\r\\n \\r\\n    \\r\\n}\\r\\n\\r\\ninput[type=\\\"submit\\\"] {\\r\\n    margin-left: 20px;\\r\\n    background-color: #7CB342;\\r\\n    width: 90px;\\r\\n    color: #fff;\\r\\n    font-size: 0.9rem;\\r\\n    font-weight: bold;\\r\\n    letter-spacing: 1px;\\r\\n    text-transform: uppercase;\\r\\n    border: none;\\r\\n    cursor: pointer;\\r\\n    transition: 0.2s ease;\\r\\n    -webkit-transition: 0.2s ease;\\r\\n}\\r\\n\\r\\ninput[type=\\\"submit\\\"]:hover, input[type=\\\"submit\\\"]:active {\\r\\n    background-color: #558B2F;\\r\\n}\\r\\n\\r\\n#submit-coords {\\r\\n    margin-top: 20px;\\r\\n}\\r\\n\\r\\n.error {\\r\\n    z-index: 1;\\r\\n    padding: 0;\\r\\n    font-size: 0.7rem;\\r\\n    color: white;\\r\\n    background-color: #f33f63;\\r\\n    border-radius: 0 0 5px 5px;\\r\\n    box-sizing: border-box;\\r\\n    \\r\\n}\\r\\n\\r\\n.error.green {\\r\\n    background-color: #7CB342;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.error.green:hover {\\r\\n    background-color: #558B2F;\\r\\n    transition: 0.2s;\\r\\n}\\r\\n\\r\\n.error.green.inactive {\\r\\n    cursor: default;\\r\\n}\\r\\n\\r\\n.error.green.inactive:hover {\\r\\n    background-color: #7CB342;\\r\\n}\\r\\n\\r\\n.disabled {\\r\\n    font-style: italic;\\r\\n    opacity: 0.7;\\r\\n}\\r\\n\\r\\n.error.active {\\r\\n    font-size: 0.7rem;\\r\\n    margin-top: -20px;\\r\\n    width: 250px;\\r\\n    padding: 0.3rem 0.5rem 0.2rem 0.5rem;\\r\\n    \\r\\n}\\r\\n\\r\\n.invisible {\\r\\n    display: none !important;\\r\\n}\\r\\n\\r\\n/* ASIDE */\\r\\n\\r\\naside {\\r\\n    height: 6rem;\\r\\n    margin-bottom: 2rem;\\r\\n}\\r\\n\\r\\naside > p {\\r\\n    padding: 0.5rem 0rem;\\r\\n}\\r\\n\\r\\naside > button {\\r\\n\\r\\n    background-color: #7CB342;\\r\\n    color: #fff;\\r\\n    margin: 10px 0px 20px 0px;\\r\\n    padding: 0.5rem 0.8rem;\\r\\n    border-radius: 20px;\\r\\n    font-size: 0.9rem;\\r\\n    font-weight: bold;\\r\\n    letter-spacing: 1px;\\r\\n    text-transform: uppercase;\\r\\n    border: none;\\r\\n    cursor: pointer;\\r\\n    transition: 0.2s ease;\\r\\n    -webkit-transition: 0.2s ease;\\r\\n}\\r\\n\\r\\naside > button:hover, aside > button:active {\\r\\n    background-color: #558B2F;\\r\\n}\\r\\n\\r\\n/* BOARDS */\\r\\n\\r\\n.board-header {\\r\\n    font-weight: bold;\\r\\n    font-size: 1.2rem;\\r\\n}\\r\\n\\r\\n.board-container {\\r\\n    height: 500px;\\r\\n    width: 500px;\\r\\n    border: 1px black solid;\\r\\n    display: grid;\\r\\n    grid-template-columns: repeat(10, auto);\\r\\n    grid-template-rows: repeat(10, auto);\\r\\n    margin: 25px;\\r\\n\\r\\n}\\r\\n\\r\\n#board-Jasper {\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n\\r\\n/* CELLS */\\r\\n\\r\\n.cell {\\r\\n    border: 1px black solid;\\r\\n    box-sizing: border-box;\\r\\n    height: 50px;\\r\\n    width: 50px;\\r\\n    display: grid;\\r\\n    align-items: center;\\r\\n    font-size: 0.9rem;\\r\\n    background-color: #0D47A1;\\r\\n}\\r\\n\\r\\n#board-jasper .cell.open:hover, #board-jasper .cell.ship.open:hover {\\r\\n    background-color: #82B1FF;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n#board-human .ship {\\r\\n    background-color: #ffda33;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.miss {\\r\\n    background-color: #80c045;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.hit {\\r\\n    background-color: #F44336 !important;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.sink {\\r\\n    background-color: #F44336 !important;\\r\\n}\\r\\n\\r\\n.inactive-cell {\\r\\n    cursor: default;\\r\\n}\\r\\n\\r\\n\\r\\n/* FOOTER */\\r\\n\\r\\nfooter {\\r\\n    position: fixed;\\r\\n \\r\\n    bottom: 0;\\r\\n    font-size: 10pt;\\r\\n    width: 100%;\\r\\n\\r\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n\n      content += cssWithMappingToString(item);\n\n      if (needLayer) {\n        content += \"}\";\n      }\n\n      if (item[2]) {\n        content += \"}\";\n      }\n\n      if (item[4]) {\n        content += \"}\";\n      }\n\n      return content;\n    }).join(\"\");\n  }; // import a list of modules into the list\n\n\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || \"\").concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join(\"\\n\");\n  }\n\n  return [content].join(\"\\n\");\n};","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./style.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./style.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\"use strict\";\n\nvar stylesInDOM = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n\n  return updater;\n}\n\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n/* istanbul ignore next  */\n\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n\n    memo[target] = styleTarget;\n  }\n\n  return memo[target];\n}\n/* istanbul ignore next  */\n\n\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n\n  target.appendChild(style);\n}\n\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\n\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\n\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n\n  var needLayer = typeof obj.layer !== \"undefined\";\n\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n\n  css += obj.css;\n\n  if (needLayer) {\n    css += \"}\";\n  }\n\n  if (obj.media) {\n    css += \"}\";\n  }\n\n  if (obj.supports) {\n    css += \"}\";\n  }\n\n  var sourceMap = obj.sourceMap;\n\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  options.styleTagTransform(css, styleElement, options.options);\n}\n\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n\n  styleElement.parentNode.removeChild(styleElement);\n}\n/* istanbul ignore next  */\n\n\nfunction domAPI(options) {\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\n\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\n\nmodule.exports = styleTagTransform;","import { Game } from \"./Game\";\r\nimport { gameLoop } from \"./gameLoop\";\r\n\r\nfunction Display() {\r\n    // initialise variables\r\n    const main = document.getElementById('main');\r\n    let currentInput = [];\r\n    let coords;\r\n    let orients;\r\n    let username;\r\n    let game;\r\n\r\n    // Removes all children from main\r\n    function clearMain() {\r\n        main.innerHTML = '';\r\n    }\r\n\r\n    // Shows form validation error \r\n    function error(message) {\r\n        const container = document.getElementById('container');\r\n        const alert = document.createElement('div');\r\n        const close = document.createElement('span');\r\n        alert.classList.add('alert');\r\n        alert.classList.add('alert-error');\r\n        close.classList.add('close-alert');\r\n        close.innerText = '✖';\r\n        \r\n        alert.innerText = message;\r\n        close.addEventListener('click', function() {\r\n            alert.classList.add('hidden');\r\n            setTimeout(function(){ alert.style.display = \"none\"; }, 600);\r\n        });\r\n        alert.appendChild(close);\r\n        container.appendChild(alert);\r\n    }\r\n\r\n    // sets username\r\n    function setUsername(name) {\r\n        return username = name;\r\n    }\r\n    \r\n    // gets username\r\n    function getUsername() {\r\n        return username;\r\n    }\r\n\r\n    // Prints a game board\r\n    function printBoard(board) {\r\n        // make outer container\r\n        const outerdiv = document.createElement('div');\r\n\r\n        if (board.owner.name == 'Jasper') {\r\n            outerdiv.setAttribute('id', 'board-jasper')\r\n        } else {\r\n            outerdiv.setAttribute('id', 'board-human');\r\n        }\r\n        \r\n        \r\n        main.appendChild(outerdiv);\r\n        // make header\r\n        const divheader = document.createElement('p');\r\n        divheader.classList.add('board-header');\r\n        divheader.innerText = board.owner.name + \"'s board\";\r\n        outerdiv.appendChild(divheader);\r\n        // make inner container\r\n        const innerdiv = document.createElement('div');\r\n        innerdiv.classList.add('board-container');\r\n        outerdiv.appendChild(innerdiv)\r\n        // make cells\r\n        for (let i = 0; i < board.board.length; i++) {\r\n            for (let j = 0; j < board.board[i].length; j++) {\r\n                const cell = document.createElement('div');\r\n                if (typeof board.board[i][j] == 'object') {\r\n                    cell.classList.add('ship');   \r\n                } else {\r\n                    cell.classList.add(`cell-${[i]}-${board.board[i][j]}`);\r\n                }\r\n                cell.classList.add('cell');\r\n\r\n                cell.classList.add('open');\r\n\r\n                cell.classList.add('cell-' + board.owner.name);\r\n                cell.setAttribute('data-coord', `${board.owner.name}-cell-${i}-${j}`);\r\n                innerdiv.appendChild(cell);\r\n            };\r\n        \r\n        };\r\n\r\n        \r\n    };\r\n\r\n\r\n    function getInput() {\r\n        return currentInput\r\n    };\r\n\r\n    // Gets user's coords for placing their ships \r\n    function getUserShips() {\r\n        const carrierinput = document.getElementById('carrier');\r\n        const carrierRadioHor = document.getElementById('carrier-horizontal');\r\n        const carrierRadioVer = document.getElementById('carrier-vertical');\r\n        const battleshipinput = document.getElementById('battleship');\r\n        const battleshipRadioHor = document.getElementById('battleship-horizontal');\r\n        const battleshipRadioVer = document.getElementById('battleship-vertical');\r\n        const destroyerinput = document.getElementById('destroyer');\r\n        const destroyerRadioHor = document.getElementById('destroyer-horizontal');\r\n        const destroyerRadioVer = document.getElementById('destroyer-vertical');\r\n        const submarineinput = document.getElementById('submarine');\r\n        const submarineRadioHor = document.getElementById('submarine-horizontal');\r\n        const submarineRadioVer = document.getElementById('submarine-vertical');\r\n        const patrolinput = document.getElementById('patrol')\r\n        const patrolRadioHor = document.getElementById('patrol-horizontal');\r\n        const patrolRadioVer = document.getElementById('patrol-vertical');\r\n\r\n        // get coords\r\n        let carrier = carrierinput.value.split(',');\r\n        let battleship = battleshipinput.value.split(',');\r\n        let destroyer = destroyerinput.value.split(',');\r\n        let submarine = submarineinput.value.split(',');\r\n        let patrolBoat = patrolinput.value.split(',');\r\n\r\n        let thesecoords = {\r\n            carrier: carrier,\r\n            battleship: battleship,\r\n            destroyer: destroyer,\r\n            submarine: submarine,\r\n            patrolBoat: patrolBoat\r\n        }\r\n  \r\n        setUserShips(thesecoords);\r\n\r\n        // get orientations\r\n        let carrierOrient;\r\n        let battleshipOrient;\r\n        let destroyerOrient;\r\n        let submarineOrient;\r\n        let patrolOrient;\r\n        // carrier\r\n        if (carrierRadioHor.checked) {\r\n            carrierOrient = 'horizontal'\r\n        } else if (carrierRadioVer.checked) {\r\n            carrierOrient = 'vertical'\r\n        }\r\n        // battleship\r\n        if (battleshipRadioHor.checked) {\r\n            battleshipOrient = 'horizontal'\r\n        } else if (battleshipRadioVer.checked) {\r\n            battleshipOrient = 'vertical'\r\n        }\r\n        // destroyer\r\n        if (destroyerRadioHor.checked) {\r\n            destroyerOrient = 'horizontal'\r\n        } else if (destroyerRadioVer.checked) {\r\n            destroyerOrient = 'vertical'\r\n        }\r\n        // submarine\r\n        if (submarineRadioHor.checked) {\r\n            submarineOrient = 'horizontal'\r\n        } else if (submarineRadioVer.checked) {\r\n            submarineOrient = 'vertical'\r\n        }\r\n        // patrol\r\n        if (patrolRadioHor.checked) {\r\n            patrolOrient = 'horizontal'\r\n        } else if (patrolRadioVer.checked) {\r\n            patrolOrient = 'vertical'\r\n        }\r\n\r\n        let orientations = {\r\n            carrierOrient: carrierOrient,\r\n            battleshipOrient: battleshipOrient,\r\n            destroyerOrient: destroyerOrient,\r\n            submarineOrient: submarineOrient,\r\n            patrolOrient: patrolOrient\r\n        }\r\n\r\n        setUserShipOrients(orientations);\r\n\r\n        let orients = getUserOrients();\r\n        let coords = getUserCoords();\r\n        \r\n\r\n        if (coords === undefined) {\r\n            let message = 'Error: not all coordinates provided';\r\n            error(message);\r\n            return message;\r\n        }\r\n\r\n        for (const key in coords) {\r\n            let value = coords[key];\r\n      \r\n            if (value === undefined) {\r\n                let message = 'Error: not all coordinates provided';\r\n                error(message);\r\n                return message;\r\n            }\r\n        }\r\n\r\n        for (const key in orients) {\r\n            let value = orients[key];\r\n \r\n            if (value === undefined) {\r\n                let message = 'Error: not all orientations provided';\r\n                error(message);\r\n                return message;\r\n            }\r\n        }\r\n\r\n        main.innerHTML = '';\r\n        \r\n    }\r\n\r\n    // sets the user ship coords\r\n    function setUserShips(obj) {\r\n         \r\n        for (const key in obj) {\r\n            let value = obj[key];\r\n\r\n            if (value == '') {\r\n                let message = 'Error: not all coordinates provided';\r\n                console.log(message);\r\n                return;\r\n            }\r\n        }\r\n     \r\n        return coords = {\r\n            userCarrier: Object.values(obj)[0],\r\n            userBattleship: Object.values(obj)[1],\r\n            userDestroyer: Object.values(obj)[2],\r\n            userSubmarine: Object.values(obj)[3],\r\n            userPatrolBoat: Object.values(obj)[4]\r\n        }\r\n\r\n    }\r\n\r\n    function getUserCoords() {\r\n        return coords;\r\n    }\r\n\r\n    function setUserShipOrients(obj) {\r\n\r\n        for (const key in obj) {\r\n            let value = obj[key];\r\n\r\n            if (value == '') {\r\n                let message = 'Error: not all orientations provided';\r\n                console.log(message);\r\n                return message;\r\n            }\r\n        }\r\n\r\n        return orients = {\r\n            userCarrierOrient: Object.values(obj)[0],\r\n            userBattleshipOrient: Object.values(obj)[1],\r\n            userDestroyerOrient: Object.values(obj)[2],\r\n            userSubmarineOrient: Object.values(obj)[3],\r\n            userPatrolBoatOrient: Object.values(obj)[4]\r\n        }\r\n    }\r\n\r\n    function getUserOrients() {\r\n        return orients;\r\n    }\r\n\r\n    // Displays the comment to the screen\r\n    function displayComment() {\r\n        const header = document.querySelector('header');\r\n        const commentContainer = document.createElement('aside');\r\n        commentContainer.setAttribute('id', 'comment-container');\r\n        header.insertAdjacentElement('afterend', commentContainer);\r\n    }\r\n\r\n    // Updates the contents of the comment\r\n    function updateComment(message) {\r\n        const commentContainer = document.getElementById('comment-container');\r\n        commentContainer.innerHTML = '';\r\n        const comment = document.createElement('p');\r\n        comment.setAttribute('id', 'comment');\r\n        comment.innerText = message;\r\n        commentContainer.appendChild(comment);\r\n    }\r\n\r\n    // Appends new content to the end of the comment\r\n    function appendComment(message) {\r\n        const commentContainer = document.getElementById('comment-container');\r\n        const commentChild = document.createElement('p');\r\n        commentChild.innerText = message;\r\n        commentContainer.appendChild(commentChild);\r\n    }\r\n\r\n    // Appends new content to the end of the same line of comment\r\n    function appendInlineComment(message) {\r\n        const comment = document.getElementById('comment');\r\n        comment.innerText += ' ' + message;\r\n    }\r\n\r\n    function startGame(name, aiCoords) {\r\n        game = new Game(name);\r\n\r\n        // Append the comment container\r\n        displayComment();\r\n        let message = game.humanBoard.owner.name + \"'s turn\"\r\n        updateComment(message);\r\n        let append = 'Click a square to attack';\r\n        appendComment(append);\r\n\r\n        // Print the boards\r\n        printBoard(game.humanBoard);\r\n        printBoard(game.AiBoard);\r\n\r\n        // Populate the boards\r\n        let coords = getUserCoords();\r\n        let orients = getUserOrients();\r\n        let aiData = aiCoords;\r\n        let aiShipCoords = {\r\n            carrier: aiData['carrier']['coord'],\r\n            battleship: aiData['battleship']['coord'],\r\n            destroyer: aiData['destroyer']['coord'],\r\n            submarine: aiData['submarine']['coord'],\r\n            patrol: aiData['patrol']['coord']\r\n        }\r\n        let aiOrients = {\r\n            carrierOrient: aiData['carrier']['ori'],\r\n            battleshipOrient: aiData['battleship']['ori'],\r\n            destroyerOrient: aiData['destroyer']['ori'],\r\n            submarineOrient: aiData['submarine']['ori'],\r\n            patrolOrient: aiData['patrol']['ori']\r\n        }\r\n        game.populateHumanBoard(game.humanBoard, coords, orients);\r\n        game.populateAiBoard(game.AiBoard, aiShipCoords, aiOrients);\r\n\r\n\r\n        // Add event listeners for AI's board's cells\r\n        let query = '.cell-' + game.AiBoard.owner.name;\r\n        const cells = document.querySelectorAll(query);    \r\n        cells.forEach((cell) => {\r\n            cell.addEventListener('click', handleEvent)\r\n            })\r\n        // Once gameOver is true, end and return winner\r\n        \r\n        return game.winner;\r\n    }\r\n\r\n    function handleEvent() {\r\n        // Remove 'open' class from this cell\r\n        if (this.classList.contains('open')) {\r\n            this.classList.remove('open');\r\n        }\r\n        // Get user's input\r\n        let input = [];\r\n        // save the input that was clicked 'Jasper-cell-2-2'\r\n        let coordString = this.getAttribute('data-coord').slice(12) // '2-2'\r\n        input = coordString.split('-');\r\n        currentInput = input;\r\n              \r\n        // call game.playRound(currentInput);\r\n        game.playRound(currentInput);\r\n    }\r\n\r\n    function endGame() {\r\n        const aside = document.querySelector('aside');\r\n        let button = document.createElement('button');\r\n        button.innerText = 'Play again';\r\n        button.addEventListener('click', function() {\r\n            playAgain();\r\n        })\r\n        aside.appendChild(button);\r\n\r\n        let query = '.cell-Jasper';\r\n        const cells = document.querySelectorAll(query);    \r\n        cells.forEach((cell) => {\r\n            if (cell.classList.contains('open')) {\r\n                cell.classList.remove('open');\r\n            }\r\n            cell.classList.add('inactive-cell');\r\n            cell.removeEventListener('click', handleEvent);\r\n        });\r\n\r\n    }\r\n\r\n    function playAgain() {\r\n        let game = new gameLoop();\r\n        const container = document.getElementById('container');\r\n        const aside = document.querySelector('aside');\r\n        container.removeChild(aside);\r\n        game.username = username;\r\n        game.displayCoordsForm();\r\n    }\r\n\r\n    return {\r\n        game: game,\r\n        coords: coords,\r\n        orients: orients,\r\n        startGame: startGame,\r\n        clearMain: clearMain,\r\n        getUsername: getUsername,\r\n        setUsername: setUsername,\r\n        printBoard: printBoard,\r\n        getInput: getInput,\r\n        getUserShips: getUserShips,\r\n        updateComment: updateComment,\r\n        appendComment: appendComment,\r\n        appendInlineComment: appendInlineComment,\r\n        endGame: endGame,\r\n    };\r\n\r\n}\r\n\r\nexport { Display }","import { Player, AiPlayer } from \"./Player\";\r\nimport { Display } from \"./Display\";\r\nimport Gameboard from \"./Gameboard\";\r\nconst display = new Display();\r\nfunction Game(name) {\r\n    // Initialise a new Player for the user\r\n    let humanPlayer = new Player(name);\r\n\r\n    // Initialise the boards\r\n    let AiBoard = new Gameboard(AiPlayer);\r\n    let humanBoard = new Gameboard(humanPlayer);\r\n\r\n    // Initalise gameOver to be false and winner to be null\r\n    let gameOver = false;\r\n    let winner = null;\r\n    \r\n    // Let the humanPlayer go first by default\r\n    let activePlayer = humanPlayer;\r\n    let receivingBoard = AiBoard;\r\n\r\n    // Populate each board with ships\r\n    function populateHumanBoard(board, coords, orients) {\r\n        board.place('carrier', coords['userCarrier'], orients['userCarrierOrient']);\r\n        board.place('battleship', coords['userBattleship'], orients['userBattleshipOrient']);\r\n        board.place('destroyer', coords['userDestroyer'], orients['userDestroyerOrient']);\r\n        board.place('submarine', coords['userSubmarine'], orients['userSubmarineOrient']);\r\n        board.place('patrol', coords['userPatrolBoat'], orients['userPatrolBoatOrient']);\r\n    }\r\n\r\n    // AiBoard\r\n    function populateAiBoard(board, coords, orients) {\r\n        board.place('carrier', coords['carrier'], orients['carrierOrient']);\r\n        board.place('battleship', coords['battleship'], orients['battleshipOrient']);\r\n        board.place('destroyer', coords['destroyer'], orients['destroyerOrient']);\r\n        board.place('submarine', coords['submarine'], orients['submarineOrient']);\r\n        board.place('patrol', coords['patrol'], orients['patrolOrient']);\r\n    }\r\n\r\n    // Performs the human's turn\r\n    function humanTurn(input) {      \r\n        let message = humanPlayer.name + '\\'s turn...';\r\n        display.updateComment(message);\r\n        // human's turn\r\n        let usedCoords = humanPlayer.usedCoords;\r\n        let attack = AiBoard.receiveAttack(input);\r\n        let l = Object.keys(usedCoords).length;\r\n        usedCoords[l] = input;\r\n\r\n        // update the display\r\n        let inputString = input.toString();\r\n        let coord = inputString.replace(\",\", \"-\");\r\n        let cell = document.querySelector(`[data-coord=\"Jasper-cell-${coord}\"]`)\r\n        cell.classList.remove('open');\r\n        cell.classList.add(attack.resultType);\r\n\r\n        display.appendInlineComment(attack.result);\r\n\r\n        // If a ship was just sunk,\r\n        if (attack.resultType === 'sink') {\r\n            let message = 'Jasper says, \"You sunk my battleship.\"'\r\n            display.updateComment(message);\r\n            setTimeout(function(){\r\n                console.log('timeout')\r\n            }, 5000);\r\n                // Check if shipsLeft on receiving board\r\n                let remainingShips = AiBoard.shipsLeft();\r\n                if (remainingShips === 0) {\r\n                    // If the receiving board has no ships left, the active player wins\r\n                    winner = humanPlayer;\r\n                    gameOver = true;\r\n                    return gameOver;\r\n                }\r\n\r\n            \r\n            \r\n        }\r\n\r\n        return attack;\r\n    }\r\n\r\n    // Performs the AI's turn\r\n    function AiTurn() {\r\n\r\n        let message = 'Jasper\\'s turn...';\r\n        display.updateComment(message);\r\n        // Get random coords\r\n        let coords = AiPlayer.randomCoords();\r\n        let usedCoords = AiPlayer.usedCoords;\r\n        let turn = AiPlayer.randomTurn(usedCoords, coords);\r\n        let aiInput = turn.coords;\r\n        let aiAttack = humanBoard.receiveAttack(aiInput);\r\n\r\n        setTimeout(function() {\r\n\r\n            // update the display\r\n            let aiInputString = aiInput.toString();\r\n            let aiCoord = aiInputString.replace(\",\", \"-\");\r\n            let aiCell = document.querySelector(`[data-coord=\"${humanBoard.owner.name}-cell-${aiCoord}\"]`);\r\n\r\n            aiCell.classList.remove('open');\r\n            aiCell.classList.add(aiAttack.resultType);\r\n            display.appendInlineComment(aiAttack.result);\r\n            // If a ship was just sunk,\r\n            if (aiAttack.resultType === 'sink') {\r\n                let message = 'Jasper says, \"I shot who in the what now?\"'\r\n                display.updateComment(message);\r\n                setTimeout(function(){\r\n                    // Check if shipsLeft on receiving board\r\n                    let remainingShips = humanBoard.shipsLeft();\r\n                    if (remainingShips === 0) {\r\n                        // If the receiving board has no ships left, the active player wins\r\n                        winner = AiPlayer;\r\n                        gameOver = true;\r\n                        return gameOver;\r\n                    }\r\n                }, 3000)\r\n                \r\n            }\r\n        }, 500)\r\n\r\n        \r\n\r\n        return {aiAttack, aiInput};\r\n    }\r\n\r\n    // play a round\r\n    function playRound(input) {\r\n        let humanTurnRes = humanTurn(input);\r\n\r\n        let winner = checkWinner();\r\n        if (winner) {\r\n            gameOver = true;\r\n            let msg = humanPlayer.name + ' wins!';\r\n            display.updateComment(msg);\r\n            let message = 'Jasper says, \"Oh, well. Easy come, easy go.\"'\r\n            display.appendComment(message);\r\n            display.endGame();\r\n            return { winner, gameOver }\r\n        }\r\n\r\n        let aiTurnRes = setTimeout(AiTurn, 1000);\r\n\r\n        winner = checkWinner();\r\n\r\n        if (winner) {\r\n            gameOver = true;\r\n            let msg = 'Jasper wins!';\r\n            display.updateComment(msg);\r\n            let message = 'Jasper says, \"That\\'s a paddlin\\'.\"'\r\n            display.appendComment(message);\r\n            display.endGame();\r\n            return { winner, gameOver }\r\n        }\r\n        return {humanTurnRes, aiTurnRes}\r\n    }\r\n\r\n\r\n    // Check for a winner\r\n    function checkWinner() {\r\n        if (!gameOver) { return }\r\n        else if (gameOver) {\r\n            // Once gameOver is true\r\n            // If winner is null, declare a draw\r\n            if (winner == null) {\r\n                winner = 'Draw'\r\n            };\r\n            // DEBUG CONSOLE LOGS\r\n            console.log('The winner is ' + winner.name)\r\n            return winner\r\n        }\r\n    }\r\n    \r\n    return {\r\n        humanPlayer: humanPlayer,\r\n        AiPlayer: AiPlayer,\r\n        gameOver: gameOver,\r\n        winner: winner,\r\n        humanBoard: humanBoard,\r\n        AiBoard: AiBoard,\r\n        activePlayer: activePlayer,\r\n        receivingBoard: receivingBoard,\r\n        populateAiBoard: populateAiBoard,\r\n        populateHumanBoard: populateHumanBoard,\r\n        checkWinner: checkWinner,\r\n        playRound: playRound,\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport { Game }","import Ship from \"./Ship\"\r\n\r\nexport default function Gameboard(owner) {\r\n    \r\n    let board = [];\r\n    for (let i = 0; i < 10; i++) {\r\n        board.push([]);\r\n        for (let j = 0; j < 10; j++) {\r\n            board[i].push(j);\r\n        }\r\n    }\r\n\r\n    return {\r\n        board: board,\r\n        shipsSunk: 0,\r\n        owner: owner,\r\n\r\n        // e.g. Gameboard.placeShip('battleship', [4,3], 'horizontal') places a Ship of length\r\n        // 4 at Gameboard coordinate (4,3)\r\n        place(shipType, coords, orientation) {\r\n     \r\n            let ship;\r\n            let xCoord;\r\n            let yCoord;\r\n            let shipCoords = [];\r\n            \r\n            // Make the ship, or return an error if shipType not defined\r\n            if (shipType == 'carrier' ||\r\n            shipType == 'battleship' ||\r\n            shipType == 'destroyer' ||\r\n            shipType == 'submarine' ||\r\n            shipType == 'patrol') {\r\n                ship = new Ship(shipType);\r\n            } else {\r\n                return 'Error: ship type is not defined'\r\n            }\r\n\r\n            // If coords are not defined, return error\r\n            if (coords != undefined) {\r\n                xCoord = parseInt(coords[1]);\r\n                yCoord = parseInt(coords[0]);\r\n            } else {\r\n                return 'Error: coords are not defined'\r\n            }\r\n\r\n            // If coords not between 0-9, return error\r\n            if (xCoord < 0 || xCoord > 9 || yCoord < 0 || yCoord > 9) {\r\n                return 'Error: coords must be from 0-9'\r\n            }\r\n\r\n            // TODO: check if ship will fit given length, coords and orientation\r\n\r\n            // Get all the subsequent required coords\r\n            // if the ship is placed horizontally, increase the x-axis\r\n            if (orientation == 'horizontal') {\r\n                for (let i = 0; i < ship.length; i++) {\r\n                    let newCoord = [yCoord, xCoord + i];\r\n                    shipCoords.push(newCoord);\r\n                }\r\n            // if the ship is placed vertically, increase the y-axis\r\n            } else if (orientation == 'vertical') {\r\n                for (let i = 0; i < ship.length; i++) {\r\n                    let newCoord = [yCoord + i, xCoord];\r\n                    shipCoords.push(newCoord);\r\n                }\r\n            } else {\r\n                return 'Error: orientation is not defined'\r\n            }\r\n\r\n            // Now we have the shipCoords as an array of coords e.g. [[0,2], [0,3]]\r\n            // We can check if the board coords are free\r\n            \r\n            // For each coord in shipcoords\r\n            for (let i = 0; i < shipCoords.length; i++) {\r\n                let currentSquare;\r\n                let currentCoord = shipCoords[i];\r\n                let currentX = currentCoord[1];\r\n                let currentY = currentCoord[0];\r\n                // Go to the square on the board that matches this coord\r\n                currentSquare = board[currentY][currentX];\r\n                // Check if this square contains a ship already\r\n                if (typeof currentSquare == 'object') {\r\n                    return 'Error: square is taken'\r\n                }\r\n            }\r\n\r\n            for (let i = 0; i < shipCoords.length; i++) {\r\n                let currentCoord = shipCoords[i];\r\n                let currentX = currentCoord[1];\r\n                let currentY = currentCoord[0];\r\n                // Go to the square on the board that matches this coord\r\n                board[currentY][currentX] = ship;\r\n                let id = owner.name + '-cell-' + currentY + '-' + currentX;\r\n                \r\n                let cell = document.querySelector(`[data-coord=\"${id}\"]`);\r\n                \r\n                cell.classList.add('ship');\r\n                cell.classList.add('open');\r\n            }\r\n\r\n            return board;\r\n        },\r\n\r\n\r\n        receiveAttack(coords) {\r\n            // Takes a pair of coords and checks if a ship is present\r\n            let result;\r\n            let resultType;\r\n            let xCoord = coords[1];\r\n            let yCoord = coords[0];\r\n            let square = board[yCoord][xCoord];\r\n\r\n            if (typeof square == 'string') {\r\n                result = \"You've already fired here!\";\r\n                resultType = 'bounce';\r\n            } else if (typeof square == 'object') {\r\n                result = 'Direct hit!';\r\n                resultType = 'hit';\r\n                let ship = board[yCoord][xCoord];\r\n\r\n                console.log('A ship was hit:');\r\n                console.log(ship);\r\n\r\n                board[yCoord][xCoord] = 'hit';\r\n                ship.hit();\r\n                ship.isSunk();\r\n                if (ship.sunk == true) {\r\n                    result += ' You sunk my ' + ship.type;\r\n                    resultType = 'sink';\r\n                    this.shipsSunk += 1;\r\n                };\r\n            } else if (typeof square == 'number') {\r\n                result = 'Miss!';\r\n                resultType = 'miss';\r\n                board[yCoord][xCoord] = 'miss';\r\n            };\r\n            return {board, result, resultType};\r\n        },\r\n\r\n        shipsLeft() {\r\n            return (5 - this.shipsSunk);\r\n        }\r\n\r\n    };\r\n};","function Player(name) {\r\n\r\n    let usedCoords = {\r\n    };\r\n\r\n    function randomCoords() {\r\n        let coords = [];\r\n        coords[0] = Math.floor(Math.random() * 10);\r\n        coords[1] = Math.floor(Math.random() * 10);\r\n        return coords;\r\n    }\r\n\r\n  \r\n\r\n    function randomTurn(usedCoords, coords) {\r\n\r\n        \r\n        let isSubArray = isSubset(coords, usedCoords);\r\n    \r\n        // base case\r\n        // If the coords do not match any used coords\r\n        if (isSubArray === false) {\r\n    \r\n            let newArray = [coords[0], coords[1]]\r\n            let l = Object.keys(usedCoords).length;\r\n            if (l == undefined || l == 0) {\r\n                usedCoords[0] = newArray;\r\n            } else {\r\n                usedCoords[l] = newArray;\r\n            }\r\n\r\n            return {coords, usedCoords}\r\n\r\n        } \r\n        // If the coords do match, try again\r\n    \r\n        coords = randomCoords();\r\n\r\n        return randomTurn(usedCoords, coords);\r\n\r\n        \r\n\r\n        \r\n    }\r\n\r\n    // Returns true if arr1 is a subset of arr2\r\n    function isSubset(coords,usedCoords) {\r\n\r\n  \r\n        console.log('AI clicked: ' + coords);\r\n\r\n        // Loop through each item in usedCoords\r\n        let l = Object.keys(usedCoords).length;\r\n   \r\n        for (let i = 0; i < l; i++) {\r\n            let currentSubarray = usedCoords[i];\r\n            if (coords[0] === currentSubarray[0] && coords[1] === currentSubarray[1]){\r\n                return true;\r\n            };\r\n        };\r\n\r\n        return false\r\n        \r\n        \r\n    };\r\n\r\n    return {\r\n        name: name,\r\n        usedCoords: usedCoords,\r\n        randomCoords: randomCoords,\r\n        randomTurn: randomTurn,\r\n    }\r\n}\r\n\r\nlet AiPlayer = Object.create(Player('Jasper'));\r\n\r\n\r\nexport { Player, AiPlayer }","// e.g. Carrier = new Ship('carrier')\r\n\r\n\r\nexport default function Ship(type) {\r\n    let length;\r\n    if (type == 'carrier') {\r\n        length = 5;\r\n    } else if (type == 'battleship') {\r\n        length = 4;\r\n    } else if (type == 'submarine' || type == 'destroyer') {\r\n        length = 3;\r\n    } else if (type == 'patrol') {\r\n        length = 2;\r\n    } \r\n\r\n    return {\r\n        type: type,\r\n        length: length,\r\n        timesHit: 0,\r\n        sunk: false,\r\n        hit() {\r\n            return this.timesHit += 1;\r\n        },\r\n        isSunk() {\r\n            if (this.timesHit === this.length) {\r\n                return this.sunk = true;\r\n            } else {\r\n                return this.sunk = false;\r\n            }\r\n        },\r\n\r\n    }\r\n}","import { Display } from './Display';\r\nimport { getNameForm } from './getNameForm';\r\nimport { getCoordsForm } from './getCoordsForm';\r\n\r\nfunction gameLoop() {\r\n\r\n    // Initialise displayController, getNameForm and getCoordsForm objects\r\n    const displayController = new Display();\r\n    const getName = new getNameForm();\r\n    const coordsForm = new getCoordsForm();\r\n\r\n    // Initialise an empty variable to store the user's name\r\n    let username;\r\n\r\n    // Starts the game by displaying the get name screen\r\n    function init() {\r\n        // Display the get name form and set its event listener\r\n        getName.display();\r\n        setNameFormListener();\r\n    };\r\n\r\n    // Private helper function for init() that sets event listener on the get name form\r\n    function setNameFormListener() {\r\n        // get submit name btn\r\n        const submitName = document.getElementById('submit-name');\r\n                    \r\n        // Add event listener to submit btn\r\n        submitName.addEventListener('click', function(e) {\r\n            // prevent default form submission\r\n            e.preventDefault();\r\n            // get user's input\r\n            const input = document.getElementById('username');\r\n            if (input.value == '') {\r\n                username = 'User';\r\n            } else {\r\n                username = input.value;\r\n            }\r\n            \r\n            // set the username\r\n            displayController.setUsername(username);\r\n            displayCoordsForm();\r\n        });\r\n    }\r\n\r\n    function displayCoordsForm() {\r\n        // clear main\r\n        const main = document.getElementById('main');\r\n        main.innerHTML = '';\r\n        // display the coords form\r\n        main.appendChild(coordsForm.form);\r\n        // set event listener for coords form submit button\r\n        setCoordFormListeners();\r\n    }\r\n\r\n    // Private helper function for setNameFormListener() that sets event listeners on the coords form\r\n    function setCoordFormListeners() {\r\n\r\n        // Set listeners to validate carrier input\r\n        coordsForm.validateCarrier();\r\n        coordsForm.validateBattleship();\r\n        coordsForm.validateDestroyer();\r\n        coordsForm.validateSubmarine();\r\n        coordsForm.validatePatrolBoat();\r\n\r\n        // get coords submit\r\n        const submitCoords = document.getElementById('submit-coords');\r\n        submitCoords.addEventListener('click', function(e) {\r\n            e.preventDefault();\r\n            let aiCoords = coordsForm.getAiCoords();\r\n            displayController.getUserShips();\r\n            displayController.startGame(username, aiCoords);\r\n            \r\n        });\r\n    }\r\n\r\n\r\n    return {\r\n        init: init,\r\n        displayCoordsForm: displayCoordsForm,\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport {gameLoop}","function getCoordsForm() {\r\n\r\n    // Initialise objects to store coord data for each ship\r\n    let carrierData = {};\r\n    let battleshipData = {};\r\n    let destroyerData = {};\r\n    let submarineData = {}\r\n    let patrolData = {};\r\n\r\n    let aiCarrierData = {};\r\n    let aiBattleshipData = {};\r\n    let aiDestroyerData = {};\r\n    let aiSubmarineData = {}\r\n    let aiPatrolData = {};\r\n\r\n    // Builds the form and returns it as an HTML element\r\n    function build() {\r\n        // make outer container\r\n        const container = document.createElement('div');\r\n        container.setAttribute('id', 'get-coords-container');\r\n        container.classList.add('form-container');\r\n        // make form\r\n        const formEl = document.createElement('form');\r\n        formEl.setAttribute('id', 'get-coords-form');\r\n        container.appendChild(formEl);\r\n        // make legend\r\n        const legend = document.createElement('legend');\r\n        legend.innerText = 'Enter your ship coordinates';\r\n        formEl.appendChild(legend);\r\n\r\n        // CARRIER\r\n        // make carrier div class 'form-control'\r\n        const carrierFormControl = document.createElement('div');\r\n        carrierFormControl.classList.add('form-control');\r\n        formEl.appendChild(carrierFormControl);\r\n        // make Carrier label\r\n        const carrierlabel = document.createElement('label');\r\n        carrierlabel.setAttribute('for', 'carrier');\r\n        carrierlabel.innerText = 'Carrier:';\r\n        carrierFormControl.appendChild(carrierlabel);\r\n        // make Carrier radios\r\n        const carrierRadioContainer = document.createElement('div');\r\n        carrierRadioContainer.classList.add('radio-container');\r\n        carrierFormControl.appendChild(carrierRadioContainer)\r\n        const carrierRadioHor = document.createElement('input');\r\n        carrierRadioHor.setAttribute('type', 'radio');\r\n        carrierRadioHor.setAttribute('id', 'carrier-horizontal');\r\n        carrierRadioHor.setAttribute('name', 'carrier-orientation');\r\n        carrierRadioHor.setAttribute('value', 'horizontal');\r\n        const carrierRadioHorLabel = document.createElement('label');\r\n        carrierRadioHorLabel.setAttribute('for', 'horizontal');\r\n        carrierRadioHorLabel.innerText = 'Horizontal';\r\n        carrierRadioContainer.appendChild(carrierRadioHor);\r\n        carrierRadioContainer.appendChild(carrierRadioHorLabel);\r\n        const carrierRadioVer = document.createElement('input');\r\n        carrierRadioVer.setAttribute('type', 'radio');\r\n        carrierRadioVer.setAttribute('id', 'carrier-vertical');\r\n        carrierRadioVer.setAttribute('name', 'carrier-orientation');\r\n        carrierRadioVer.setAttribute('value', 'vertical');\r\n        const carrierRadioVerLabel = document.createElement('label');\r\n        carrierRadioVerLabel.setAttribute('for', 'vertical');\r\n        carrierRadioVerLabel.innerText = 'Vertical';\r\n        carrierRadioContainer.appendChild(carrierRadioVer);\r\n        carrierRadioContainer.appendChild(carrierRadioVerLabel);\r\n        // make Carrier input type text\r\n        const carrierinput = document.createElement('input');\r\n        carrierinput.setAttribute('type', 'text');\r\n        carrierinput.setAttribute('name', 'carrier');\r\n        carrierinput.setAttribute('id', 'carrier');\r\n        carrierinput.setAttribute('placeholder', '0,0');\r\n        carrierFormControl.appendChild(carrierinput);\r\n        // make carrier error span\r\n        let errorFormControl = document.createElement('div');\r\n        errorFormControl.classList.add('form-control');\r\n        formEl.appendChild(errorFormControl);\r\n        const carrierError = document.createElement('span');\r\n        carrierError.classList.add('error');\r\n        carrierError.setAttribute('id', 'carrier-error');\r\n        carrierError.setAttribute('aria-live', 'polite');\r\n        errorFormControl.appendChild(carrierError);\r\n\r\n        // BATTLESHIP\r\n        // make battleship div class 'form-control'\r\n        const battleshipFormControl = document.createElement('div');\r\n        battleshipFormControl.classList.add('form-control');\r\n        battleshipFormControl.classList.add('disabled');\r\n        formEl.appendChild(battleshipFormControl);\r\n        // make battleship label\r\n        const battleshiplabel = document.createElement('label');\r\n        battleshiplabel.setAttribute('for', 'battleship');\r\n        battleshiplabel.innerText = 'Battleship:';\r\n        battleshipFormControl.appendChild(battleshiplabel);\r\n        // make battleship radios\r\n        const battleshipRadioContainer = document.createElement('div');\r\n        battleshipRadioContainer.classList.add('radio-container');\r\n        battleshipFormControl.appendChild(battleshipRadioContainer);\r\n        const battleshipRadioHor = document.createElement('input');\r\n        battleshipRadioHor.setAttribute('type', 'radio');\r\n        battleshipRadioHor.setAttribute('id', 'battleship-horizontal');\r\n        battleshipRadioHor.setAttribute('name', 'battleship-orientation');\r\n        battleshipRadioHor.setAttribute('value', 'horizontal');\r\n        const battleshipRadioHorLabel = document.createElement('label');\r\n        battleshipRadioHorLabel.setAttribute('for', 'horizontal');\r\n        battleshipRadioHorLabel.innerText = 'Horizontal';\r\n        battleshipRadioContainer.appendChild(battleshipRadioHor);\r\n        battleshipRadioContainer.appendChild(battleshipRadioHorLabel);\r\n        const battleshipRadioVer = document.createElement('input');\r\n        battleshipRadioVer.setAttribute('type', 'radio');\r\n        battleshipRadioVer.setAttribute('id', 'battleship-vertical');\r\n        battleshipRadioVer.setAttribute('name', 'battleship-orientation');\r\n        battleshipRadioVer.setAttribute('value', 'vertical');\r\n        const battleshipRadioVerLabel = document.createElement('label');\r\n        battleshipRadioVerLabel.setAttribute('for', 'vertical');\r\n        battleshipRadioVerLabel.innerText = 'Vertical';\r\n        battleshipRadioContainer.appendChild(battleshipRadioVer);\r\n        battleshipRadioContainer.appendChild(battleshipRadioVerLabel);\r\n        // make battleship input type text\r\n        const battleshipinput = document.createElement('input');\r\n        battleshipinput.setAttribute('type', 'text');\r\n        battleshipinput.setAttribute('name', 'battleship');\r\n        battleshipinput.setAttribute('id', 'battleship');\r\n        battleshipinput.setAttribute('placeholder', '0,0');\r\n        battleshipFormControl.appendChild(battleshipinput);\r\n        // make battleship error span\r\n        let errorFormControl2 = document.createElement('div');\r\n        errorFormControl2.classList.add('form-control');\r\n        formEl.appendChild(errorFormControl2);\r\n        const battleshipError = document.createElement('span');\r\n        battleshipError.classList.add('error');\r\n        battleshipError.setAttribute('id', 'battleship-error');\r\n        battleshipError.setAttribute('aria-live', 'polite');\r\n        errorFormControl2.appendChild(battleshipError);\r\n\r\n        // DESTROYER\r\n        // make destroyer div class 'form-control'\r\n        const destroyerFormControl = document.createElement('div');\r\n        destroyerFormControl.classList.add('form-control');\r\n        destroyerFormControl.classList.add('disabled');\r\n        formEl.appendChild(destroyerFormControl);\r\n        // make destroyer label\r\n        const destroyerlabel = document.createElement('label');\r\n        destroyerlabel.setAttribute('for', 'destroyer');\r\n        destroyerlabel.innerText = 'Destroyer:';\r\n        destroyerFormControl.appendChild(destroyerlabel);\r\n        // make destroyer radios\r\n        const destroyerRadioContainer = document.createElement('div');\r\n        destroyerRadioContainer.classList.add('radio-container');\r\n        destroyerFormControl.appendChild(destroyerRadioContainer)\r\n        const destroyerRadioHor = document.createElement('input');\r\n        destroyerRadioHor.setAttribute('type', 'radio');\r\n        destroyerRadioHor.setAttribute('id', 'destroyer-horizontal');\r\n        destroyerRadioHor.setAttribute('name', 'destroyer-orientation');\r\n        destroyerRadioHor.setAttribute('value', 'horizontal');\r\n        const destroyerRadioHorLabel = document.createElement('label');\r\n        destroyerRadioHorLabel.setAttribute('for', 'horizontal');\r\n        destroyerRadioHorLabel.innerText = 'Horizontal';\r\n        destroyerRadioContainer.appendChild(destroyerRadioHor);\r\n        destroyerRadioContainer.appendChild(destroyerRadioHorLabel);\r\n        const destroyerRadioVer = document.createElement('input');\r\n        destroyerRadioVer.setAttribute('type', 'radio');\r\n        destroyerRadioVer.setAttribute('id', 'destroyer-vertical');\r\n        destroyerRadioVer.setAttribute('name', 'destroyer-orientation');\r\n        destroyerRadioVer.setAttribute('value', 'vertical');\r\n        const destroyerRadioVerLabel = document.createElement('label');\r\n        destroyerRadioVerLabel.setAttribute('for', 'vertical');\r\n        destroyerRadioVerLabel.innerText = 'Vertical';\r\n        destroyerRadioContainer.appendChild(destroyerRadioVer);\r\n        destroyerRadioContainer.appendChild(destroyerRadioVerLabel);\r\n        // make destroyer input type text\r\n        const destroyerinput = document.createElement('input');\r\n        destroyerinput.setAttribute('type', 'text');\r\n        destroyerinput.setAttribute('name', 'destroyer');\r\n        destroyerinput.setAttribute('id', 'destroyer');\r\n        destroyerinput.setAttribute('placeholder', '0,0');\r\n        destroyerFormControl.appendChild(destroyerinput);\r\n        // make destroyer error span\r\n        let errorFormControl3 = document.createElement('div');\r\n        errorFormControl3.classList.add('form-control');\r\n        formEl.appendChild(errorFormControl3);\r\n        const destroyerError = document.createElement('span');\r\n        destroyerError.classList.add('error');\r\n        destroyerError.setAttribute('id', 'destroyer-error');\r\n        destroyerError.setAttribute('aria-live', 'polite');\r\n        errorFormControl3.appendChild(destroyerError);\r\n        \r\n        // SUBMARINE\r\n        // make submarine div class 'form-control'\r\n        const submarineFormControl = document.createElement('div');\r\n        submarineFormControl.classList.add('form-control');\r\n        submarineFormControl.classList.add('disabled');\r\n        formEl.appendChild(submarineFormControl);\r\n        // make submarine label\r\n        const submarinelabel = document.createElement('label');\r\n        submarinelabel.setAttribute('for', 'submarine');\r\n        submarinelabel.innerText = 'Submarine:';\r\n        submarineFormControl.appendChild(submarinelabel);\r\n        // make submarine radios\r\n        const submarineRadioContainer = document.createElement('div');\r\n        submarineRadioContainer.classList.add('radio-container');\r\n        submarineFormControl.appendChild(submarineRadioContainer)\r\n        const submarineRadioHor = document.createElement('input');\r\n        submarineRadioHor.setAttribute('type', 'radio');\r\n        submarineRadioHor.setAttribute('id', 'submarine-horizontal');\r\n        submarineRadioHor.setAttribute('name', 'submarine-orientation');\r\n        submarineRadioHor.setAttribute('value', 'horizontal');\r\n        const submarineRadioHorLabel = document.createElement('label');\r\n        submarineRadioHorLabel.setAttribute('for', 'horizontal');\r\n        submarineRadioHorLabel.innerText = 'Horizontal';\r\n        submarineRadioContainer.appendChild(submarineRadioHor);\r\n        submarineRadioContainer.appendChild(submarineRadioHorLabel);\r\n        const submarineRadioVer = document.createElement('input');\r\n        submarineRadioVer.setAttribute('type', 'radio');\r\n        submarineRadioVer.setAttribute('id', 'submarine-vertical');\r\n        submarineRadioVer.setAttribute('name', 'submarine-orientation');\r\n        submarineRadioVer.setAttribute('value', 'vertical');\r\n        const submarineRadioVerLabel = document.createElement('label');\r\n        submarineRadioVerLabel.setAttribute('for', 'vertical');\r\n        submarineRadioVerLabel.innerText = 'Vertical';\r\n        submarineRadioContainer.appendChild(submarineRadioVer);\r\n        submarineRadioContainer.appendChild(submarineRadioVerLabel);\r\n        // make submarine input type text\r\n        const submarineinput = document.createElement('input');\r\n        submarineinput.setAttribute('type', 'text');\r\n        submarineinput.setAttribute('name', 'submarine');\r\n        submarineinput.setAttribute('id', 'submarine');\r\n        submarineinput.setAttribute('placeholder', '0,0');\r\n        submarineFormControl.appendChild(submarineinput);\r\n        // make submarine error span\r\n        let errorFormControl4 = document.createElement('div');\r\n        errorFormControl4.classList.add('form-control');\r\n        formEl.appendChild(errorFormControl4);\r\n        const submarineError = document.createElement('span');\r\n        submarineError.classList.add('error');\r\n        submarineError.setAttribute('id', 'submarine-error');\r\n        submarineError.setAttribute('aria-live', 'polite');\r\n        errorFormControl4.appendChild(submarineError);\r\n\r\n        // PATROL BOAT\r\n        // make patrol div class 'form-control'\r\n        const patrolFormControl = document.createElement('div');\r\n        patrolFormControl.classList.add('form-control');\r\n        patrolFormControl.classList.add('disabled');\r\n        formEl.appendChild(patrolFormControl);\r\n        // make patrol label\r\n        const patrollabel = document.createElement('label');\r\n        patrollabel.setAttribute('for', 'patrol');\r\n        patrollabel.innerText = 'Patrol boat:';\r\n        patrolFormControl.appendChild(patrollabel);\r\n        // make patrol radios\r\n        const patrolRadioContainer = document.createElement('div');\r\n        patrolRadioContainer.classList.add('radio-container');\r\n        patrolFormControl.appendChild(patrolRadioContainer)\r\n        const patrolRadioHor = document.createElement('input');\r\n        patrolRadioHor.setAttribute('type', 'radio');\r\n        patrolRadioHor.setAttribute('id', 'patrol-horizontal');\r\n        patrolRadioHor.setAttribute('name', 'patrol-orientation');\r\n        patrolRadioHor.setAttribute('value', 'horizontal');\r\n        const patrolRadioHorLabel = document.createElement('label');\r\n        patrolRadioHorLabel.setAttribute('for', 'horizontal');\r\n        patrolRadioHorLabel.innerText = 'Horizontal';\r\n        patrolRadioContainer.appendChild(patrolRadioHor);\r\n        patrolRadioContainer.appendChild(patrolRadioHorLabel);\r\n        const patrolRadioVer = document.createElement('input');\r\n        patrolRadioVer.setAttribute('type', 'radio');\r\n        patrolRadioVer.setAttribute('id', 'patrol-vertical');\r\n        patrolRadioVer.setAttribute('name', 'patrol-orientation');\r\n        patrolRadioVer.setAttribute('value', 'vertical');\r\n        const patrolRadioVerLabel = document.createElement('label');\r\n        patrolRadioVerLabel.setAttribute('for', 'vertical');\r\n        patrolRadioVerLabel.innerText = 'Vertical';\r\n        patrolRadioContainer.appendChild(patrolRadioVer);\r\n        patrolRadioContainer.appendChild(patrolRadioVerLabel);\r\n        // make patrol input type text\r\n        const patrolinput = document.createElement('input');\r\n        patrolinput.setAttribute('type', 'text');\r\n        patrolinput.setAttribute('name', 'patrol');\r\n        patrolinput.setAttribute('id', 'patrol');\r\n        patrolinput.setAttribute('placeholder', '0,0');\r\n        patrolFormControl.appendChild(patrolinput);\r\n        // make patrol error span\r\n        let errorFormControl5 = document.createElement('div');\r\n        errorFormControl5.classList.add('form-control');\r\n        formEl.appendChild(errorFormControl5);\r\n        const patrolError = document.createElement('span');\r\n        patrolError.classList.add('error');\r\n        patrolError.setAttribute('id', 'patrol-error');\r\n        patrolError.setAttribute('aria-live', 'polite');\r\n        errorFormControl5.appendChild(patrolError);\r\n\r\n        //SUBMIT\r\n        // make submit div class 'form-control'\r\n        const submitFormControl = document.createElement('div');\r\n        submitFormControl.classList.add('form-control');\r\n        formEl.appendChild(submitFormControl);\r\n        // make submit btn\r\n        const submit = document.createElement('input');\r\n        submit.setAttribute('type', 'submit');\r\n        submit.setAttribute('id', 'submit-coords');\r\n        submit.setAttribute('value', 'Play');\r\n        submitFormControl.appendChild(submit);\r\n\r\n        // set disableds\r\n        battleshipRadioHor.disabled = true;\r\n        battleshipRadioVer.disabled = true;\r\n        battleshipinput.disabled = true;\r\n\r\n        destroyerRadioHor.disabled = true;\r\n        destroyerRadioVer.disabled = true;\r\n        destroyerinput.disabled = true;\r\n\r\n        submarineRadioHor.disabled = true;\r\n        submarineRadioVer.disabled = true;\r\n        submarineinput.disabled = true;\r\n\r\n        patrolRadioHor.disabled = true;\r\n        patrolRadioVer.disabled = true;\r\n        patrolinput.disabled = true;\r\n        return container;\r\n    }\r\n\r\n    // Returns a random orientation\r\n    function randomOri() {\r\n        let ori;\r\n        let num = Math.floor(Math.random() * 2);\r\n        if (num > 0) {\r\n            ori = 'horizontal';\r\n        } else {\r\n            ori = 'vertical';\r\n        }\r\n        return ori;\r\n\r\n    }\r\n\r\n    // Returns random coords as a string\r\n    function randomCoords() {\r\n        let coords = '';\r\n        let row = Math.floor(Math.random() * 10);\r\n        let col = Math.floor(Math.random() * 10);\r\n        coords = row.toString() + ',' + col.toString();\r\n        return coords\r\n    }\r\n\r\n    // Gets ai coords for carrier and validates them\r\n    function aiCarrierCoords(coord) {\r\n        // get a random coord for carrier\r\n        let ori = randomOri();\r\n        let rowRegex = /[0-5]\\W\\d/gm;\r\n        let colRegex = /\\d\\W[0-5]/gm;\r\n        let match;\r\n        // If the ori horizontal\r\n        if (ori == 'horizontal') {\r\n            // check the input is valid against the colRegex\r\n            match = validate(coord, colRegex);\r\n            // Base case:\r\n            // If match is true, the input is valid\r\n            if (match === true) {\r\n                // so save the data\r\n                saveData(coord, ori, aiCarrierData);\r\n                return aiCarrierData;\r\n            // If match is false, the input is invalid\r\n            } else {\r\n                // Recursively call this function with new coords\r\n                let newcoord = randomCoords();\r\n                aiCarrierCoords(newcoord);\r\n            }\r\n        // If the ori is vertical \r\n        } else if (ori == 'vertical') {\r\n            match = validate(coord, rowRegex);\r\n            // Base case:\r\n            // If match is true, the input is valid\r\n            if (match === true) {\r\n                // so save the data\r\n                saveData(coord, ori, aiCarrierData);\r\n                return aiCarrierData;\r\n            // If match is false, the input is invalid\r\n            } else {\r\n                // Recursively call this function with new coords\r\n                let newcoord = randomCoords();\r\n                aiCarrierCoords(newcoord);\r\n            }\r\n    }};\r\n\r\n    // Gets ai coords for battleship and validates them\r\n    function aiBattleshipCoords(coord) {\r\n        // get a random coord for carrier\r\n        let ori = randomOri();\r\n        let rowRegex = /[0-6]\\W\\d/gm;\r\n        let colRegex = /\\d\\W[0-6]/gm;\r\n        let match;\r\n        // If the ori horizontal\r\n        if (ori == 'horizontal') {\r\n            // check the input is valid against the colRegex\r\n            match = validate(coord, colRegex);\r\n            // Base case:\r\n            // If match is true, the input is valid\r\n            if (match === true) {\r\n                // so save the data\r\n                saveData(coord, ori, aiBattleshipData);\r\n                // Compare with carrierData\r\n                let valid = compareData(aiBattleshipData, aiCarrierData);\r\n                if (valid == true) {\r\n                    saveData(coord, ori, aiBattleshipData);\r\n                    return aiBattleshipData\r\n                } else if (valid == false) {\r\n                    let newcoord = randomCoords();\r\n                    aiBattleshipCoords(newcoord);\r\n                }\r\n            // If match is false, the input is invalid\r\n            } else {\r\n                // Recursively call this function with new coords\r\n                let newcoord = randomCoords();\r\n                aiBattleshipCoords(newcoord);\r\n            }\r\n        // If the ori is vertical \r\n        } else if (ori == 'vertical') {\r\n            match = validate(coord, rowRegex);\r\n            // Base case:\r\n            // If match is true, the input is valid\r\n            if (match === true) {\r\n                // so save the data\r\n                saveData(coord, ori, aiBattleshipData);\r\n                // Compare with carrierData\r\n                let valid = compareData(aiBattleshipData, aiCarrierData);\r\n                if (valid == true) {\r\n                    saveData(coord, ori, aiBattleshipData);\r\n                    return aiBattleshipData;\r\n                } else if (valid == false) {\r\n                    let newcoord = randomCoords();\r\n                    aiBattleshipCoords(newcoord);\r\n                }\r\n            // If match is false, the input is invalid\r\n            } else {\r\n                // Recursively call this function with new coords\r\n                let newcoord = randomCoords();\r\n                aiBattleshipCoords(newcoord);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Gets ai coords for destroyer and validates them\r\n    function aiDestroyerCoords(coord) {\r\n        // get a random coord for carrier\r\n        let ori = randomOri();\r\n        let rowRegex = /[0-7]\\W\\d/gm;\r\n        let colRegex = /\\d\\W[0-7]/gm;\r\n        let match;\r\n        // If the ori horizontal\r\n        if (ori == 'horizontal') {\r\n            // check the input is valid against the colRegex\r\n            match = validate(coord, colRegex);\r\n            // Base case:\r\n            // If match is true, the input is valid\r\n            if (match === true) {\r\n                // so save the data\r\n                saveData(coord, ori, aiDestroyerData);\r\n                // Compare with carrierData & batleshipData\r\n                let valid = compareData(aiDestroyerData, aiCarrierData);\r\n                let valid2 = compareData(aiDestroyerData, aiBattleshipData);\r\n                if (valid == true && valid2 == true) {\r\n                    saveData(coord, ori, aiDestroyerData);\r\n                    return aiDestroyerData\r\n                } else if (valid == false || valid2 == false) {\r\n                    let newcoord = randomCoords();\r\n                    aiDestroyerCoords(newcoord);\r\n                }\r\n            // If match is false, the input is invalid\r\n            } else {\r\n                // Recursively call this function with new coords\r\n                let newcoord = randomCoords();\r\n                aiDestroyerCoords(newcoord);\r\n            }\r\n        // If the ori is vertical \r\n        } else if (ori == 'vertical') {\r\n            match = validate(coord, rowRegex);\r\n            // Base case:\r\n            // If match is true, the input is valid\r\n            if (match === true) {\r\n                // so save the data\r\n                saveData(coord, ori, aiDestroyerData);\r\n                // Compare with carrierData & batleshipData\r\n                let valid = compareData(aiDestroyerData, aiCarrierData);\r\n                let valid2 = compareData(aiDestroyerData, aiBattleshipData);\r\n                if (valid == true && valid2 == true) {\r\n                    saveData(coord, ori, aiDestroyerData);\r\n                    return aiDestroyerData\r\n                } else if (valid == false || valid2 == false) {\r\n                    let newcoord = randomCoords();\r\n                    aiDestroyerCoords(newcoord);\r\n                }\r\n            // If match is false, the input is invalid\r\n            } else {\r\n                // Recursively call this function with new coords\r\n                let newcoord = randomCoords();\r\n                aiDestroyerCoords(newcoord);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Gets ai coords for submarine and validates them\r\n    function aiSubmarineCoords(coord) {\r\n        // get a random coord for carrier\r\n        let ori = randomOri();\r\n        let rowRegex = /[0-7]\\W\\d/gm;\r\n        let colRegex = /\\d\\W[0-7]/gm;\r\n        let match;\r\n        // If the ori horizontal\r\n        if (ori == 'horizontal') {\r\n            // check the input is valid against the colRegex\r\n            match = validate(coord, colRegex);\r\n            // Base case:\r\n            // If match is true, the input is valid\r\n            if (match === true) {\r\n                // so save the data\r\n                saveData(coord, ori, aiSubmarineData);\r\n                // Compare with carrierData & batleshipData & destroyerData\r\n                let valid = compareData(aiSubmarineData, aiCarrierData);\r\n                let valid2 = compareData(aiSubmarineData, aiBattleshipData);\r\n                let valid3 = compareData(aiSubmarineData, aiDestroyerData);\r\n                if (valid == true && valid2 == true && valid3 == true) {\r\n                    saveData(coord, ori, aiSubmarineData);\r\n                    return aiSubmarineData;\r\n                } else if (valid == false || valid2 == false || valid3 == false) {\r\n                    let newcoord = randomCoords();\r\n                    aiSubmarineCoords(newcoord);\r\n                }\r\n            // If match is false, the input is invalid\r\n            } else {\r\n                // Recursively call this function with new coords\r\n                let newcoord = randomCoords();\r\n                aiSubmarineCoords(newcoord);\r\n            }\r\n        // If the ori is vertical \r\n        } else if (ori == 'vertical') {\r\n            match = validate(coord, rowRegex);\r\n            // Base case:\r\n            // If match is true, the input is valid\r\n            if (match === true) {\r\n                // so save the data\r\n                saveData(coord, ori, aiSubmarineData);\r\n                // Compare with carrierData & batleshipData & destroyerData\r\n                let valid = compareData(aiSubmarineData, aiCarrierData);\r\n                let valid2 = compareData(aiSubmarineData, aiBattleshipData);\r\n                let valid3 = compareData(aiSubmarineData, aiDestroyerData);\r\n                if (valid == true && valid2 == true && valid3 == true) {\r\n                    saveData(coord, ori, aiSubmarineData);\r\n                    return aiSubmarineData\r\n                } else if (valid == false || valid2 == false || valid3 == false) {\r\n                    let newcoord = randomCoords();\r\n                    aiSubmarineCoords(newcoord);\r\n                }\r\n            // If match is false, the input is invalid\r\n            } else {\r\n                // Recursively call this function with new coords\r\n                let newcoord = randomCoords();\r\n                aiSubmarineCoords(newcoord);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Gets ai coords for patrol boat and validates them\r\n    function aiPatrolCoords(coord) {\r\n        // get a random coord for carrier\r\n        let ori = randomOri();\r\n        let rowRegex = /[0-8]\\W\\d/gm;\r\n        let colRegex = /\\d\\W[0-8]/gm;\r\n        let match;\r\n        // If the ori horizontal\r\n        if (ori == 'horizontal') {\r\n            // check the input is valid against the colRegex\r\n            match = validate(coord, colRegex);\r\n            // Base case:\r\n            // If match is true, the input is valid\r\n            if (match === true) {\r\n                // so save the data\r\n                saveData(coord, ori, aiPatrolData);\r\n                // Compare with carrierData & batleshipData & destroyerData\r\n                let valid = compareData(aiPatrolData, aiCarrierData);\r\n                let valid2 = compareData(aiPatrolData, aiBattleshipData);\r\n                let valid3 = compareData(aiPatrolData, aiDestroyerData);\r\n                let valid4 = compareData(aiPatrolData, aiSubmarineData);\r\n                if (valid == true && valid2 == true && valid3 == true && valid4 == true) {\r\n                    saveData(coord, ori, aiPatrolData);\r\n                    return aiPatrolData\r\n                } else if (valid == false || valid2 == false || valid3 == false || valid4 == false) {\r\n                    let newcoord = randomCoords();\r\n                    aiPatrolCoords(newcoord);\r\n                }\r\n            // If match is false, the input is invalid\r\n            } else {\r\n                // Recursively call this function with new coords\r\n                let newcoord = randomCoords();\r\n                aiPatrolCoords(newcoord);\r\n            }\r\n        // If the ori is vertical \r\n        } else if (ori == 'vertical') {\r\n            match = validate(coord, rowRegex);\r\n            // Base case:\r\n            // If match is true, the input is valid\r\n            if (match === true) {\r\n                // so save the data\r\n                saveData(coord, ori, aiPatrolData);\r\n                // Compare with carrierData & batleshipData & destroyerData\r\n                let valid = compareData(aiPatrolData, aiCarrierData);\r\n                let valid2 = compareData(aiPatrolData, aiBattleshipData);\r\n                let valid3 = compareData(aiPatrolData, aiDestroyerData);\r\n                let valid4 = compareData(aiPatrolData, aiSubmarineData);\r\n                if (valid == true && valid2 == true && valid3 == true && valid4 == true) {\r\n                    saveData(coord, ori, aiPatrolData);\r\n                    return aiPatrolData\r\n                } else if (valid == false || valid2 == false || valid3 == false || valid4 == false) {\r\n                    let newcoord = randomCoords();\r\n                    aiPatrolCoords(newcoord);\r\n                }\r\n            // If match is false, the input is invalid\r\n            } else {\r\n                // Recursively call this function with new coords\r\n                let newcoord = randomCoords();\r\n                aiPatrolCoords(newcoord);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Validates the carrier input using regex\r\n    function validateCarrier() {\r\n\r\n        // get the inputs from the DOM\r\n        const carrierinput = document.getElementById('carrier');\r\n        const carrierRadioHor = document.getElementById('carrier-horizontal');\r\n        const carrierRadioVer = document.getElementById('carrier-vertical');\r\n        const carrierError = document.getElementById('carrier-error');\r\n\r\n        // validate carrier input\r\n        carrierinput.addEventListener('input', function() {\r\n            let string = carrierinput.value;\r\n            let rowRegex = /[0-5]\\W\\d/gm;\r\n            let colRegex = /\\d\\W[0-5]/gm;\r\n            let match;\r\n            // If the input is 3 chars\r\n            if (string.length === 3) {\r\n                // If the input is 3 chars and the horizontal radio is checked\r\n                if (carrierRadioHor.checked) {\r\n                    let ori = 'horizontal';\r\n                    // check the input is valid against the colRegex\r\n                    match = validate(string, colRegex);\r\n                    // If match is false, the input is invalid\r\n                    if (match === false) {\r\n                        // so show an error\r\n                        showError('carrier');\r\n                    // If match is true, the input is valid\r\n                    } else {\r\n                        // If the input is valid: \r\n                        // Hide any errors\r\n                        carrierError.textContent = 'Click here for next ship';\r\n                        carrierError.className = 'error green active';\r\n                        saveData(string, ori, carrierData);\r\n                        carrierError.addEventListener('click', function() {\r\n                            goNextInput(carrierError);\r\n                        });\r\n                    }\r\n                // If the input is 3 chars and the vertical radio is checked\r\n                } else if (carrierRadioVer.checked) {\r\n                    let ori = 'vertical';\r\n                    match = validate(string, rowRegex);\r\n                    if (match === false) {\r\n                        showError('carrier');\r\n                    } else {\r\n                        carrierError.textContent = 'Click here for next ship';\r\n                        carrierError.className = 'error green active';\r\n                        saveData(string, ori, carrierData);\r\n                        carrierError.addEventListener('click', function() {\r\n                            goNextInput(carrierError);\r\n                        });\r\n                    }\r\n                }\r\n            // If the input is less than 3 chars, remove errors and don't validate\r\n            } else if (string.length < 3) {\r\n                carrierError.textContent = '';\r\n                carrierError.className = 'error';\r\n            // If the input is more than 3 chars, show error\r\n            } else {\r\n                showError('carrier');\r\n                carrierError.textContent = 'Please enter coordinates e.g. 0,0';\r\n            }\r\n        });\r\n\r\n        // radio checks\r\n        carrierRadioHor.addEventListener('click', function() {\r\n            let string = carrierinput.value;\r\n            let match;\r\n            let colRegex = /\\d\\W[0-5]/gm;\r\n            if (string.length >= 3) {\r\n                match = validate(string, colRegex);\r\n                    if (match === false) {\r\n                        showError('carrier');\r\n                    } else {\r\n                        carrierError.textContent = 'Click here for next ship';\r\n                        carrierError.className = 'error green active';\r\n                        saveData(string, 'horizontal', carrierData);\r\n                        carrierError.addEventListener('click', function() {\r\n                            goNextInput(carrierError);\r\n                        });\r\n                    }\r\n            }\r\n        });\r\n\r\n        carrierRadioVer.addEventListener('click', function() {\r\n            let string = carrierinput.value;\r\n            let match;\r\n            let rowRegex = /[0-5]\\W\\d/gm;\r\n            if (string.length >= 3) {\r\n                match = validate(string, rowRegex);\r\n                    if (match === false) {\r\n                        showError('carrier');\r\n                    } else {\r\n                        carrierError.textContent = 'Click here for next ship';\r\n                        carrierError.className = 'error green active';\r\n                        saveData(string, 'vertical', carrierData);\r\n                        carrierError.addEventListener('click', function() {\r\n                            goNextInput(carrierError);\r\n                        });\r\n                    }\r\n            }\r\n        });\r\n    }\r\n\r\n    // Validates the battleship input using regex\r\n    function validateBattleship() {\r\n        // Get the HTML elements from the DOM\r\n        // get the inputs from the DOM\r\n        const battleshipinput = document.getElementById('battleship');\r\n        const battleshipRadioHor = document.getElementById('battleship-horizontal');\r\n        const battleshipRadioVer = document.getElementById('battleship-vertical');\r\n        const battleshipError = document.getElementById('battleship-error');\r\n\r\n        // Validate\r\n        battleshipinput.addEventListener('input', function() {\r\n            // initialise vars\r\n            let string = battleshipinput.value;\r\n            let rowRegex = /[0-6]\\W\\d/g;\r\n            let colRegex = /\\d\\W[0-6]/g;\r\n            let match;\r\n\r\n            if (string.length === 3) {\r\n                if (battleshipRadioHor.checked) {\r\n                    let ori = 'horizontal';\r\n                    match = validate(string, colRegex);\r\n                    if (match === false) {\r\n                        showError('battleship');\r\n                    } else {\r\n\r\n                        // save the data provided\r\n                        saveData(string, ori, battleshipData);\r\n                        // Compare with carrierData\r\n                        let valid = compareData(battleshipData, carrierData);\r\n                       \r\n                        if (valid == true) {\r\n                            //move on to the next\r\n                            battleshipError.textContent = 'Click here for next ship';\r\n                            battleshipError.className = 'error green active';\r\n                            battleshipError.addEventListener('click', function() {\r\n                                goNextInput(battleshipError);\r\n                            });\r\n                        } else if (valid == false) {\r\n                            showError('battleship');\r\n                        }\r\n                    }\r\n                    \r\n                } else if (battleshipRadioVer.checked) {\r\n                    let ori = 'vertical';\r\n                    match = validate(string, rowRegex);\r\n                    if (match === false) {\r\n                        showError('battleship');\r\n                    } else {\r\n                        // save the data provided\r\n                        saveData(string, ori, battleshipData);\r\n                        // Compare with carrierData\r\n                        let valid = compareData(battleshipData, carrierData);\r\n                        if (valid == true) {\r\n                            //move on to the next\r\n                            battleshipError.textContent = 'Click here for next ship';\r\n                            battleshipError.className = 'error green active';\r\n                            battleshipError.addEventListener('click', function() {\r\n                                goNextInput(battleshipError);\r\n                            });\r\n                        } else if (valid == false) {\r\n                            showError('battleship');\r\n                        }\r\n                    }\r\n                }\r\n            } else if (string.length < 3) {\r\n                battleshipError.textContent = '';\r\n                battleshipError.className = 'error';\r\n            } else {\r\n                showError('battleship');\r\n                battleshipError.textContent = 'Please enter coordinates e.g. 0,0';\r\n            }\r\n        });\r\n\r\n        // radio checks\r\n        battleshipRadioHor.addEventListener('click', function() {\r\n            let string = battleshipinput.value;\r\n            let match;\r\n            let colRegex = /\\d\\W[0-6]/g;\r\n            if (string.length >= 3) {\r\n                match = validate(string, colRegex);\r\n                    if (match === false) {\r\n                        showError('battleship');\r\n                    } else {\r\n                        \r\n                        saveData(string, 'horizontal', battleshipData);\r\n                        // Compare with carrierData\r\n                        let valid = compareData(battleshipData, carrierData);\r\n                        if (valid == true) {\r\n                            //move on to the next\r\n                            battleshipError.textContent = 'Click here for next ship';\r\n                            battleshipError.className = 'error green active';\r\n                            battleshipError.addEventListener('click', function() {\r\n                                goNextInput(battleshipError);\r\n                            });\r\n                        } else if (valid == false) {\r\n                            showError('battleship');\r\n                        }\r\n                    }\r\n            }\r\n        });\r\n\r\n        battleshipRadioVer.addEventListener('click', function() {\r\n            let string = battleshipinput.value;\r\n            let match;\r\n            let rowRegex = /[0-6]\\W\\d/g;\r\n            if (string.length >= 3) {\r\n                match = validate(string, rowRegex);\r\n                    if (match === false) {\r\n                        showError('battleship');\r\n                    } else {\r\n                        saveData(string, 'vertical', battleshipData);\r\n                        // Compare with carrierData\r\n                        let valid = compareData(battleshipData, carrierData);\r\n                        if (valid == true) {\r\n                            //move on to the next\r\n                            battleshipError.textContent = 'Click here for next ship';\r\n                            battleshipError.className = 'error green active';\r\n                            battleshipError.addEventListener('click', function() {\r\n                                goNextInput(battleshipError);\r\n                            });\r\n                        } else if (valid == false) {\r\n                            showError('battleship');\r\n                        }\r\n                    }\r\n            }\r\n        });\r\n    }\r\n\r\n    // Validates the destroyer input using regex\r\n    function validateDestroyer() {\r\n\r\n        // Get the HTML elements from the DOM\r\n        const destroyerinput = document.getElementById('destroyer');\r\n        const destroyerRadioHor = document.getElementById('destroyer-horizontal');\r\n        const destroyerRadioVer = document.getElementById('destroyer-vertical');\r\n        const destroyerError = document.getElementById('destroyer-error');\r\n\r\n        destroyerinput.addEventListener('input', function() {\r\n            // initialise vars\r\n            let string = destroyerinput.value;\r\n            let rowRegex = /[0-7]\\W\\d/g;\r\n            let colRegex = /\\d\\W[0-7]/g;\r\n            let match;\r\n\r\n            if (string.length === 3) {\r\n                if (destroyerRadioHor.checked) {\r\n                    let ori = 'horizontal';\r\n                    match = validate(string, colRegex);\r\n                    if (match === false) {\r\n                        showError('destroyer');\r\n                    } else {\r\n                        saveData(string, ori, destroyerData);\r\n                        // Compare with carrierData & battleshipData\r\n                        let valid = compareData(destroyerData, carrierData);\r\n                        let valid2 = compareData(destroyerData, battleshipData);\r\n                        if (valid == true && valid2 == true) {\r\n                            //move on to the next\r\n                            destroyerError.textContent = 'Click here for next ship';\r\n                            destroyerError.className = 'error green active';\r\n                            destroyerError.addEventListener('click', function() {\r\n                                goNextInput(destroyerError);\r\n                            });\r\n                        } else if (valid == false || valid2 == false) {\r\n                            showError('destroyer');\r\n                        }\r\n                    }\r\n                    \r\n                } else if (destroyerRadioVer.checked) {\r\n                    let ori = 'vertical';\r\n                    match = validate(string, rowRegex);\r\n                    if (match === false) {\r\n                        showError('destroyer');\r\n                    } else {\r\n                        \r\n                        saveData(string, ori, destroyerData);\r\n                        // Compare with carrierData & battleshipData\r\n                        let valid = compareData(destroyerData, carrierData);\r\n                        let valid2 = compareData(destroyerData, battleshipData);\r\n                        if (valid == true && valid2 == true) {\r\n                            //move on to the next\r\n                            destroyerError.textContent = 'Click here for next ship';\r\n                            destroyerError.className = 'error green active';\r\n                            destroyerError.addEventListener('click', function() {\r\n                                goNextInput(destroyerError);\r\n                            });\r\n                        } else if (valid == false || valid2 == false) {\r\n                            showError('destroyer');\r\n                        }\r\n                    }\r\n                }\r\n            } else if (string.length < 3) {\r\n                destroyerError.textContent = '';\r\n                destroyerError.className = 'error';\r\n            } else {\r\n                showError('destroyer');\r\n                destroyerError.textContent = 'Please enter coordinates e.g. 0,0';\r\n            }\r\n        });\r\n\r\n        // radio checks\r\n        destroyerRadioHor.addEventListener('click', function() {\r\n            let string = destroyerinput.value;\r\n            let match;\r\n            let colRegex = /\\d\\W[0-7]/g;\r\n            if (string.length >= 3) {\r\n                match = validate(string, colRegex);\r\n                    if (match === false) {\r\n                        showError('destroyer');\r\n                    } else {\r\n                        \r\n                        saveData(string, 'horizontal', destroyerData);\r\n                        // Compare with carrierData & battleshipData\r\n                        let valid = compareData(destroyerData, carrierData);\r\n                        let valid2 = compareData(destroyerData, battleshipData);\r\n                        if (valid == true && valid2 == true) {\r\n                            //move on to the next\r\n                            destroyerError.textContent = 'Click here for next ship';\r\n                            destroyerError.className = 'error green active';\r\n                            destroyerError.addEventListener('click', function() {\r\n                                goNextInput(destroyerError);\r\n                            });\r\n                        } else if (valid == false || valid2 == false) {\r\n                            showError('destroyer');\r\n                        }\r\n                    }\r\n            }\r\n        });\r\n\r\n        destroyerRadioVer.addEventListener('click', function() {\r\n            let string = destroyerinput.value;\r\n            let match;\r\n            let rowRegex = /[0-7]\\W\\d/g;\r\n            if (string.length >= 3) {\r\n                match = validate(string, rowRegex);\r\n                    if (match === false) {\r\n                        showError('destroyer');\r\n                    } else {\r\n                        saveData(string, 'vertical', destroyerData);\r\n                        // Compare with carrierData & battleshipData\r\n                        let valid = compareData(destroyerData, carrierData);\r\n                        let valid2 = compareData(destroyerData, battleshipData);\r\n                 \r\n                        if (valid == true && valid2 == true) {\r\n                            //move on to the next\r\n                            destroyerError.textContent = 'Click here for next ship';\r\n                            destroyerError.className = 'error green active';\r\n                            destroyerError.addEventListener('click', function() {\r\n                                goNextInput(destroyerError);\r\n                            });\r\n                        } else if (valid == false || valid2 == false) {\r\n                            showError('destroyer');\r\n                        }\r\n                    }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    // Validates the submarine input using regex\r\n    function validateSubmarine() {\r\n\r\n        // Get the HTML elements from the DOM\r\n        const submarineinput = document.getElementById('submarine');\r\n        const submarineRadioHor = document.getElementById('submarine-horizontal');\r\n        const submarineRadioVer = document.getElementById('submarine-vertical');\r\n        const submarineError = document.getElementById('submarine-error');\r\n\r\n        // validate submarine input\r\n        submarineinput.addEventListener('input', function() {\r\n            // initialise vars\r\n            let string = submarineinput.value;\r\n            let rowRegex = /[0-7]\\W\\d/g;\r\n            let colRegex = /\\d\\W[0-7]/g;\r\n            let match;\r\n\r\n            if (string.length === 3) {\r\n                if (submarineRadioHor.checked) {\r\n                    let ori = 'horizontal';\r\n                    match = validate(string, colRegex);\r\n                    if (match === false) {\r\n                        showError('submarine');\r\n                    } else {\r\n                        // Save the data\r\n                        saveData(string, ori, submarineData);\r\n                        // Compare with carrierData & battleshipData & destroyerData\r\n                        let valid = compareData(submarineData, carrierData);\r\n                        let valid2 = compareData(submarineData, battleshipData);\r\n                        let valid3 = compareData(submarineData, destroyerData)\r\n                        if (valid == true && valid2 == true && valid3 == true) {\r\n                            //move on to the next\r\n                            submarineError.textContent = 'Click here for next ship';\r\n                            submarineError.className = 'error green active';\r\n                            submarineError.addEventListener('click', function() {\r\n                                goNextInput(submarineError);\r\n                            });\r\n                        } else if (valid == false || valid2 == false || valid3 == false) {\r\n                            showError('submarine');\r\n                        }\r\n                    }\r\n                    \r\n                } else if (submarineRadioVer.checked) {\r\n                    let ori = 'vertical';\r\n                    match = validate(string, rowRegex);\r\n                    if (match === false) {\r\n                        showError('submarine');\r\n                    } else {\r\n                        // Save the data\r\n                        saveData(string, ori, submarineData);\r\n                        // Compare with carrierData & battleshipData & destroyerData\r\n                        let valid = compareData(submarineData, carrierData);\r\n                        let valid2 = compareData(submarineData, battleshipData);\r\n                        let valid3 = compareData(submarineData, destroyerData)\r\n                        if (valid == true && valid2 == true && valid3 == true) {\r\n                            //move on to the next\r\n                            submarineError.textContent = 'Click here for next ship';\r\n                            submarineError.className = 'error green active';\r\n                            submarineError.addEventListener('click', function() {\r\n                                goNextInput(submarineError);\r\n                            });\r\n                        } else if (valid == false || valid2 == false || valid3 == false) {\r\n                            showError('submarine');\r\n                        }\r\n                    }\r\n                }\r\n            } else if (string.length < 3) {\r\n                submarineError.textContent = '';\r\n                submarineError.className = 'error';\r\n            } else {\r\n                showError('submarine');\r\n                submarineError.textContent = 'Please enter coordinates e.g. 0,0';\r\n            }\r\n        });\r\n\r\n        // radio checks\r\n        submarineRadioHor.addEventListener('click', function() {\r\n            let string = submarineinput.value;\r\n            let match;\r\n            let colRegex = /\\d\\W[0-7]/g;\r\n            if (string.length >= 3) {\r\n                match = validate(string, colRegex);\r\n                    if (match === false) {\r\n                        showError('submarine');\r\n                    } else {\r\n                        \r\n                        saveData(string, 'horizontal', submarineData);\r\n                        // Compare with carrierData & battleshipData & destroyerData\r\n                        let valid = compareData(submarineData, carrierData);\r\n                        let valid2 = compareData(submarineData, battleshipData);\r\n                        let valid3 = compareData(submarineData, destroyerData)\r\n                        if (valid == true && valid2 == true && valid3 == true) {\r\n                            //move on to the next\r\n                            submarineError.textContent = 'Click here for next ship';\r\n                            submarineError.className = 'error green active';\r\n                            submarineError.addEventListener('click', function() {\r\n                                goNextInput(submarineError);\r\n                            });\r\n                        } else if (valid == false || valid2 == false || valid3 == false) {\r\n                            showError('submarine');\r\n                        }\r\n                    }\r\n            }\r\n        });\r\n\r\n        submarineRadioVer.addEventListener('click', function() {\r\n            let string = submarineinput.value;\r\n            let match;\r\n            let rowRegex = /[0-7]\\W\\d/g;\r\n            if (string.length >= 3) {\r\n                match = validate(string, rowRegex);\r\n                    if (match === false) {\r\n                        showError('submarine');\r\n                    } else {\r\n                        \r\n                        saveData(string, 'vertical', submarineData);\r\n                        // Compare with carrierData & battleshipData & destroyerData\r\n                        let valid = compareData(submarineData, carrierData);\r\n                        let valid2 = compareData(submarineData, battleshipData);\r\n                        let valid3 = compareData(submarineData, destroyerData)\r\n                        if (valid == true && valid2 == true && valid3 == true) {\r\n                            //move on to the next\r\n                            submarineError.textContent = 'Click here for next ship';\r\n                            submarineError.className = 'error green active';\r\n                            submarineError.addEventListener('click', function() {\r\n                                goNextInput(submarineError);\r\n                            });\r\n                        } else if (valid == false || valid2 == false || valid3 == false) {\r\n                            showError('submarine');\r\n                        }\r\n                    }\r\n            }\r\n        });\r\n\r\n\r\n    };\r\n\r\n    // Validates the patrol boat input using regex\r\n    function validatePatrolBoat() {\r\n\r\n        // Get the HTML elements from the DOM\r\n        const patrolinput = document.getElementById('patrol');\r\n        const patrolRadioHor = document.getElementById('patrol-horizontal');\r\n        const patrolRadioVer = document.getElementById('patrol-vertical');\r\n        const patrolError = document.getElementById('patrol-error');\r\n\r\n        // validate patrol input\r\n        patrolinput.addEventListener('input', function() {\r\n            // initialise vars\r\n            let string = patrolinput.value;\r\n            let rowRegex = /[0-8]\\W\\d/g;\r\n            let colRegex = /\\d\\W[0-8]/g;\r\n            let match;\r\n\r\n            if (string.length === 3) {\r\n                if (patrolRadioHor.checked) {\r\n                    let ori = 'horizontal';\r\n                    match = validate(string, colRegex);\r\n                    if (match === false) {\r\n                        showError('patrol');\r\n                    } else {\r\n                        saveData(string, ori, patrolData);\r\n                        // Compare with carrierData & battleshipData & destroyerData\r\n                        let valid = compareData(patrolData, carrierData);\r\n                        let valid2 = compareData(patrolData, battleshipData);\r\n                        let valid3 = compareData(patrolData, destroyerData);\r\n                        let valid4 = compareData(patrolData, submarineData)\r\n                        if (valid == true && valid2 == true && valid3 == true && valid4 == true) {\r\n                            //move on to the next\r\n                            patrolError.textContent = 'Click \\'Play\\' to start';\r\n                            patrolError.className = 'error green active';\r\n                           \r\n                        } else if (valid == false || valid2 == false || valid3 == false || valid4 == false) {\r\n                            showError('patrol');\r\n                        }\r\n                    }\r\n                    \r\n                } else if (patrolRadioVer.checked) {\r\n                    let ori = 'vertical';\r\n                    match = validate(string, rowRegex);\r\n                    if (match === false) {\r\n                        showError('patrol');\r\n                    } else {\r\n                        saveData(string, ori, patrolData);\r\n                        // Compare with carrierData & battleshipData & destroyerData\r\n                        let valid = compareData(patrolData, carrierData);\r\n                        let valid2 = compareData(patrolData, battleshipData);\r\n                        let valid3 = compareData(patrolData, destroyerData);\r\n                        let valid4 = compareData(patrolData, submarineData)\r\n                        if (valid == true && valid2 == true && valid3 == true && valid4 == true) {\r\n                            //move on to the next\r\n                            patrolError.textContent = 'Click \\'Play\\' to start';\r\n                            patrolError.className = 'error green active';\r\n                           \r\n                        } else if (valid == false || valid2 == false || valid3 == false || valid4 == false) {\r\n                            showError('patrol');\r\n                        }\r\n                    }\r\n                }\r\n            } else if (string.length < 3) {\r\n                patrolError.textContent = '';\r\n                patrolError.className = 'error';\r\n            } else {\r\n                showError('patrol');\r\n                patrolError.textContent = 'Please enter coordinates e.g. 0,0';\r\n            }\r\n        });\r\n\r\n        // radio checks\r\n        patrolRadioHor.addEventListener('click', function() {\r\n            let string = patrolinput.value;\r\n            let match;\r\n            let colRegex = /\\d\\W[0-8]/g;\r\n            if (string.length >= 3) {\r\n                match = validate(string, colRegex);\r\n                    if (match === false) {\r\n                        showError('destroyer');\r\n                    } else {\r\n                        \r\n                        saveData(string, 'horizontal', patrolData);\r\n                        // Compare with carrierData & battleshipData & destroyerData\r\n                        let valid = compareData(patrolData, carrierData);\r\n                        let valid2 = compareData(patrolData, battleshipData);\r\n                        let valid3 = compareData(patrolData, destroyerData);\r\n                        let valid4 = compareData(patrolData, submarineData)\r\n                        if (valid == true && valid2 == true && valid3 == true && valid4 == true) {\r\n                            //move on to the next\r\n                            patrolData.textContent = 'Click here for next ship';\r\n                            patrolData.className = 'error green active';\r\n                            patrolData.addEventListener('click', function() {\r\n                                goNextInput(patrolData);\r\n                            });\r\n                        } else if (valid == false || valid2 == false || valid3 == false || valid4 == false) {\r\n                            showError('patrol');\r\n                        }\r\n                    }\r\n            }\r\n        });\r\n\r\n        patrolRadioVer.addEventListener('click', function() {\r\n            let string = patrolinput.value;\r\n            let match;\r\n            let rowRegex = /[0-8]\\W\\d/g;\r\n            if (string.length >= 3) {\r\n                match = validate(string, rowRegex);\r\n                    if (match === false) {\r\n                        showError('patrol');\r\n                    } else {\r\n                        \r\n                        saveData(string, 'vertical', patrolData);\r\n                        // Compare with carrierData & battleshipData & destroyerData\r\n                        let valid = compareData(patrolData, carrierData);\r\n                        let valid2 = compareData(patrolData, battleshipData);\r\n                        let valid3 = compareData(patrolData, destroyerData);\r\n                        let valid4 = compareData(patrolData, submarineData)\r\n                        if (valid == true && valid2 == true && valid3 == true && valid4 == true) {\r\n                            //move on to the next\r\n                            patrolData.textContent = 'Click here for next ship';\r\n                            patrolData.className = 'error green active';\r\n                            patrolData.addEventListener('click', function() {\r\n                                goNextInput(patrolData);\r\n                            });\r\n                        } else if (valid == false || valid2 == false || valid3 == false || valid4 == false) {\r\n                            showError('patrol');\r\n                        }\r\n                    }\r\n            }\r\n        });\r\n    };\r\n\r\n    // Private helper function for validateCarrier etc.\r\n    // Takes a boat type and shows its form validation error\r\n    function showError(type) {\r\n        const carrierError = document.getElementById('carrier-error');\r\n        const battleshipError = document.getElementById('battleship-error');\r\n        const destroyerError = document.getElementById('destroyer-error');\r\n        const submarineError = document.getElementById('submarine-error');\r\n        const patrolError = document.getElementById('patrol-error');\r\n        if (type === 'carrier') {\r\n            carrierError.textContent = \"It won't fit there\";\r\n            carrierError.className = 'error active';\r\n        } else if (type === 'battleship') {\r\n            battleshipError.textContent = \"It won't fit there\";\r\n            battleshipError.className = 'error active';\r\n        } else if (type === 'destroyer') {\r\n            destroyerError.textContent = \"It won't fit there\";\r\n            destroyerError.className = 'error active';\r\n        } else if (type === 'submarine') {\r\n            submarineError.textContent = \"It won't fit there\";\r\n            submarineError.className = 'error active';\r\n        } else if (type === 'patrol') {\r\n            patrolError.textContent = \"It won't fit there\";\r\n            patrolError.className = 'error active';\r\n        }\r\n        return\r\n    };\r\n\r\n    // Private helper function for validateCarrier etc.\r\n    // Validates form inputs with regular expression\r\n    function validate(string, regex) {\r\n        return regex.test(string);\r\n    };\r\n\r\n    // Saves input data to ship data object\r\n    function saveData(string, ori, object) {\r\n        // Store the data in the object\r\n        object.coord = string.split(',');\r\n        object.ori = ori;\r\n        object.squares = {};\r\n\r\n        // Set the increment\r\n        let increment;\r\n        if (object === carrierData || object === aiCarrierData) {\r\n            increment = 5;\r\n        } else if (object === battleshipData || object === aiBattleshipData) {\r\n            increment = 4;\r\n        } else if (object === destroyerData || object === submarineData || object === aiDestroyerData || object === aiSubmarineData) {\r\n            increment = 3;\r\n        } else if (object === patrolData || object === aiPatrolData) {\r\n            increment = 2;\r\n        }\r\n\r\n        if (ori === 'horizontal') {\r\n            // Calculate the coords for carrierData.squares;\r\n            for (let i = 0; i < increment; i++) {\r\n                let coord = object.coord;\r\n                let row = parseInt(coord[0]);\r\n                let col = parseInt(coord[1]);\r\n                object['squares'][i] = [row, (col + i)];\r\n            }\r\n        } else if (ori === 'vertical') {\r\n            // Calculate the coords for carrierData.squares;\r\n            for (let i = 0; i < increment; i++) {\r\n                let coord = object.coord;\r\n                let row = parseInt(coord[0]);\r\n                let col = parseInt(coord[1]);\r\n                object['squares'][i] = [(row + i), col];\r\n            }\r\n        }\r\n        \r\n    };\r\n\r\n    // Compares the data between two objects\r\n    // returns true if NO match found\r\n    // returns false if any match found\r\n    function compareData(obj1, obj2) {\r\n        let valid = true;\r\n        let newData = obj1;\r\n        let oldData = obj2;\r\n        let newDataSquares = newData.squares;\r\n        let oldDataSquares = oldData.squares;\r\n        for (const key in oldDataSquares) {\r\n            let oldVal = oldDataSquares[key];\r\n            for (const key in newDataSquares) {\r\n                let newVal = newDataSquares[key];\r\n                if (oldVal[0] === newVal[0] && oldVal[1] === newVal[1]) {\r\n                    valid = false;\r\n                    return valid;\r\n                }\r\n            }\r\n        }\r\n        return valid;\r\n    };\r\n\r\n    // Toggles a form element as disabled\r\n    function toggleDisabled(el) {\r\n        if (el.disabled) {\r\n            el.disabled = false;\r\n        } else if (!el.disabled) {\r\n            el.disabled = true;\r\n        }\r\n    };\r\n\r\n    // Toggles a class=\"disabled\" on an element\r\n    function toggleClassDisable(el) {\r\n        if (el.classList.contains('disabled')) {\r\n            el.classList.remove('disabled');\r\n        } else if (!el.classList.contains('disabled')) {\r\n            el.classList.add('disabled');\r\n        }\r\n    };\r\n\r\n    function goNextInput(obj) {\r\n        let currentFormControl = obj.parentElement.previousElementSibling;\r\n        let nextFormControl = obj.parentElement.nextSibling;\r\n        toggleClassDisable(currentFormControl);\r\n        toggleClassDisable(nextFormControl);\r\n\r\n        let currentchildren = currentFormControl.children;\r\n        let currentinput = currentchildren[2];\r\n        let currentradios = currentchildren[1].children;\r\n        toggleDisabled(currentinput);\r\n        toggleDisabled(currentradios[0]);\r\n        toggleDisabled(currentradios[2]);\r\n\r\n        obj.textContent = '';\r\n        obj.className = 'error';\r\n\r\n        let children = nextFormControl.children;\r\n        let input = children[2];\r\n        let radios = children[1].children;\r\n        toggleDisabled(input);\r\n        toggleDisabled(radios[0]);\r\n        toggleDisabled(radios[2]);\r\n    };\r\n\r\n    function getAiCoords() {\r\n        let coord = randomCoords();\r\n        aiCarrierCoords(coord);\r\n        let coord2 = randomCoords();\r\n        aiBattleshipCoords(coord2);\r\n        let coord3 = randomCoords();\r\n        aiDestroyerCoords(coord3);\r\n        let coord4 = randomCoords();\r\n        aiSubmarineCoords(coord4);\r\n        let coord5 = randomCoords();\r\n        aiPatrolCoords(coord5);\r\n        let aiCoords = {\r\n            carrier: aiCarrierData,\r\n            battleship: aiBattleshipData,\r\n            destroyer: aiDestroyerData,\r\n            submarine: aiSubmarineData,\r\n            patrol: aiPatrolData,\r\n        }\r\n        return aiCoords\r\n    }\r\n\r\n    return {\r\n        form: build(),\r\n        validateCarrier: validateCarrier,\r\n        validateBattleship: validateBattleship,\r\n        validateDestroyer: validateDestroyer,\r\n        validateSubmarine: validateSubmarine,\r\n        validatePatrolBoat: validatePatrolBoat,\r\n        getAiCoords: getAiCoords,\r\n    };\r\n}\r\n\r\nexport { getCoordsForm };","function getNameForm() {\r\n    // Get HTML elements\r\n    const main = document.getElementById('main');\r\n\r\n\r\n    // Build the username form and append it to the Main div\r\n    function display() {\r\n        // make outer container\r\n        const container = document.createElement('div');\r\n        container.setAttribute('id', 'get-username-container');\r\n        container.classList.add('form-container');\r\n        main.appendChild(container);\r\n\r\n        // make form\r\n        const form = document.createElement('form');\r\n        form.setAttribute('id', 'get-username-form');\r\n        container.appendChild(form);\r\n\r\n        // make legend\r\n        const legend = document.createElement('legend');\r\n        legend.innerText = 'Enter your name to begin';\r\n        form.appendChild(legend);\r\n\r\n        // make div class 'form-control'\r\n        const formControl = document.createElement('div');\r\n        formControl.classList.add('form-control');\r\n        form.appendChild(formControl);\r\n\r\n        // make label\r\n        const label = document.createElement('label');\r\n        label.setAttribute('for', 'username');\r\n        label.innerText = 'Your name:';\r\n        formControl.appendChild(label);\r\n\r\n        // make input type text\r\n        const input = document.createElement('input');\r\n        input.setAttribute('type', 'text');\r\n        input.setAttribute('name', 'username');\r\n        input.setAttribute('id', 'username');\r\n        input.setAttribute('placeholder', 'Name');\r\n        formControl.appendChild(input);\r\n\r\n        // make submit btn\r\n        const submit = document.createElement('input');\r\n        submit.setAttribute('type', 'submit');\r\n        submit.setAttribute('id', 'submit-name');\r\n        submit.setAttribute('value', 'Next');\r\n        formControl.appendChild(submit);\r\n    }\r\n    \r\n    return {\r\n        display: display,\r\n    }\r\n}\r\n\r\nexport { getNameForm }","// eslint-disable-next-line no-unused-vars\r\nimport style from './style.css';\r\nimport { gameLoop } from './gameLoop';\r\n\r\nlet game = new gameLoop();\r\ngame.init();"],"names":[],"sourceRoot":""}